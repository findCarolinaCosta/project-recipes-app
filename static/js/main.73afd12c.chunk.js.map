{"version":3,"sources":["images/profileIcon.svg","services/fetchMeals.js","services/fetchDrinks.js","images/blackHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","services/fetchDrinksByIngredient.js","services/fetchMealsByIngredient.js","images/whiteHeartIcon.svg","images/searchIcon.svg","components/SearchBar.js","services/fetchDrinksByFirstLetter.js","services/fetchDrinksCategories.js","services/fetchMealsCategories.js","context/Context.js","services/fetchDrinksByName.js","services/fetchMealsByFirstLetter.js","services/fetchMealsByName.js","images/shareIcon.svg","pages/Login.js","components/RecipeCard.js","components/Footer.jsx","components/Header.js","services/fetchMealsByCategories.js","pages/FoodsRecipes.js","pages/Profile.js","helpers/getExit.js","components/ButtonShare.js","components/CardRecipesMade.js","pages/RecipesMade.js","pages/FavoritesRecipes.js","helpers/returnImgFavorite.js","pages/ExploreScreen.js","services/fetchRandomMeals.js","pages/ExploreFoods.js","services/fetchRandomDrinks.js","pages/ExploreDrinks.js","services/fetchDrinksByCategory.js","pages/DrinksRecipes.js","services/fetchDrinkRecipeDetailsById.js","services/fetchMealRecipeDetailsById.js","services/fetchDrinksRecipeDetailsById.js","helpers/getRecipe.js","helpers/getRecipeObj.js","components/ButtonFavorite.js","helpers/makeIngredientsList.js","components/ButtonProgress.js","RecommendedsCard.js","Recommendeds.js","components/DrinkDetails.js","components/MealDetails.js","components/RecipeDetails.js","helpers/checkTarget.js","pages/DrinksRecipesInProgress.js","pages/MealsRecipesInProgress.js","services/fetchDrinksIngredients.js","pages/ExploreDrinksIngredients.js","services/fetchIngredients.js","pages/ExploreFoodsIngredients.js","services/fetchAreas.js","pages/ExploreFoodsAreas.js","pages/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchMeals","a","fetch","response","json","jsonResponse","fetchDrinks","fetchDrinksByIngredient","receivedIngredient","API_URL","drinks","fetchMealsByIngredient","meals","SearchBar","useState","chosenSearch","setSearch","useContext","Context","setMeals","setDrinks","searchTerm","isSearchByIngredient","routeCurrent","historyCurrent","redirectToDetails","receivedResponse","global","alert","Object","keys","includes","length","push","idMeal","idDrink","searchMeals","searchTermParam","then","fetchMealsByName","letter","slice","fetchMealsByFirstLetter","searchDrinks","fetchDrinksByName","fetchDrinksByFirstLetter","searchRecipes","handleRadioClick","value","useEffect","className","htmlFor","data-testid","type","name","checked","id","onClick","target","receivedLetter","fetchDrinksCategories","console","log","fetchMealsCategories","createContext","Provider","INICIAL_FAVORITE_STORAGE","Consumer","localStorage","getItem","JSON","parse","RecipesProvider","props","children","email","setEmail","mealsCategories","setMealsCategories","drinksCategories","setDrinksCategories","areas","setAreas","ingredients","setIngredients","sharedProps","setSharedProps","cocktails","recipesInProgress","setRecipeInProgress","favoriteStorage","setFavoriteStorage","isFavorite","setIsFavorite","recipe","setRecipe","inProgress","setInProgress","recipesDone","setRecipesDone","isRecipesDone","setIsRecipesDone","doneRecipes","setDoneRecipes","doneRecipesFilteredByName","setDoneRecipesFilteredByName","setSearchTerm","setIsSearchByIngredient","setRouteCurrent","setHistoryCurrent","context","receivedName","getDisabled","password","test","Login","history","setPassword","aria-label","onChange","disabled","event","preventDefault","setItem","stringify","RecipeCard","itemToMap","map","meal","index","style","width","key","to","src","strMealThumb","alt","strMeal","drink","strDrinkThumb","strDrink","Footer","DrinkIcon","ExploreIcon","MealIcon","Header","isVisible","setIsVisible","profileIcon","searchIcon","placeholder","fetchMealsByCategories","receivedCategory","FoodsRecipes","nameBtn","setnameBtn","location","pathname","role","categorizeiMeal","strCategory","categoryName","filteredByCategory","Profile","emailByLocalStorage","clear","getExit","ButtonShare","wasCopied","setWasCopied","navigator","clipboard","writeText","window","href","setTimeout","shareIcon","CardRecipesMade","gettingRecipeTags","tags","tag","filter","item","verifyListRecipes","image","area","category","doneDate","alcoholicOrNot","RecipesMade","handleClickFiltered","FavoritesRecipes","currFilter","setCurrFilter","handleFilter","favorite","height","prev","newFavorites","favoriteItem","blackHeartIcon","returnImgFavorite","ExploreScreen","fetchRandomMeals","ExploreFoods","randomRecipeID","setRandomRecipeID","fetchRandom","recipeObj","fetchRandomDrinks","ExploreDrinks","fetchDrinksByCategory","DrinksRecipes","categoriseDrink","fetchDrinkRecipeDetailsById","receivedId","fetchMealRecipeDetailsById","fetchDrinksRecipeDetailsById","getRecipe","ID","currentRouteName","responseMeals","responseDrinks","getRecipeObj","recipeID","recipeItem","strArea","strAlcoholic","ButtonFavorite","match","params","forEach","split","setRecipes","whiteHeartIcon","prevState","newState","makeIngredientsList","receivedRecipe","ingredientsList","ingredientName","objectToPush","ingredientMeasure","ButtonProgress","gettingRoute","currentRecipeId","state","RecommendedsCard","toRender","Recommendeds","cardsToCarousel","items","Carousel","indicators","CarouselItem","DrinkDetails","toAccompany","setToAccompany","verifyRecipe","gettingProgressRecipes","some","recipeIdStorage","listToReturn","generateAccompanimentsList","gettingRecipesDone","Array","from","recipeDoneIdStorage","strIngredient1","strIngredient2","ingredient","strInstructions","MealDetails","url","strYoutube","RecipeDetails","checkTarget","check","DrinksRecipesInProgress","checkedList","setCheckedList","inProgressObj","setIngredientsInitial","setIngredientsList","fetchRecipe","ingredientMensure","entries","ingredientSetting","lenght","reduce","curr","toggleChecked","newList","IngredientsList","innerIndex","listIngredients","setStorage","every","data","Date","storageList","getDate","getMonth","getFullYear","MealsRecipesInProgress","strTags","fetchDrinksIngredients","ExploreDrinksIngredients","fetchByIngredients","ingredientsObj","__ingredient","fetchIngredients","ExploreFoodsIngredients","idIngredient","strIngredient","fetchAreas","ExploreFoodsAreas","filterArea","setFilterArea","fetchAreasToState","fetchResponse","fetchMealsToContext","arrObj","ErrorPage","App","exact","path","component","MealsRecipsInProgress","Boolean","hostname","ReactDOM","render","basename","process","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73afd12c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileIcon.487bb078.svg\";","const fetchMeals = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchMeals;\n","const fetchDrinks = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchDrinks;\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.2dd238fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.85b05925.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.329a2bd6.svg\";","const fetchDrinksByIngredient = async (receivedIngredient) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${receivedIngredient}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByIngredient;\n","const fetchMealsByIngredient = async (receivedIngredient) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${receivedIngredient}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByIngredient;\n","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.fa9422b6.svg\";","import React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context/Context';\nimport fetchDrinksByFirstLetter from '../services/fetchDrinksByFirstLetter';\nimport fetchDrinksByIngredient from '../services/fetchDrinksByIngredient';\nimport fetchDrinksByName from '../services/fetchDrinksByName';\nimport fetchMealsByFirstLetter from '../services/fetchMealsByFirstLetter';\nimport fetchMealsByIngredient from '../services/fetchMealsByIngredient';\nimport fetchMealsByName from '../services/fetchMealsByName';\n\nfunction SearchBar() {\n  const [chosenSearch, setSearch] = useState({});\n  const { meals, setMeals, drinks, setDrinks,\n    searchTerm, isSearchByIngredient, routeCurrent, historyCurrent,\n  } = useContext(Context);\n\n  const redirectToDetails = async (receivedResponse) => {\n    if (receivedResponse === null) {\n      return global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    }\n    if (Object.keys(receivedResponse[0]).includes('idMeal')) {\n      await setMeals(receivedResponse);\n      if (receivedResponse.length === 1) {\n        historyCurrent.push(`/comidas/${receivedResponse[0].idMeal}`);\n      }\n    }\n    if (Object.keys(receivedResponse[0]).includes('idDrink')) {\n      await setDrinks(receivedResponse);\n      if (receivedResponse.length === 1) {\n        historyCurrent.push(`/bebidas/${receivedResponse[0].idDrink}`);\n      }\n    }\n  };\n\n  const searchMeals = (searchTermParam) => {\n    if (chosenSearch === 'ingredient') {\n      fetchMealsByIngredient(searchTermParam)\n        .then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'name') {\n      fetchMealsByName(searchTermParam)\n        .then(async (response) => redirectToDetails(response));\n    } else if (chosenSearch === 'firstletter') {\n      if (searchTermParam.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n      } else {\n        const letter = searchTermParam.slice(0, 1);\n        fetchMealsByFirstLetter(letter).then((response) => redirectToDetails(response));\n      }\n    }\n    return meals;\n  };\n\n  const searchDrinks = async (searchTermParam) => {\n    if (chosenSearch === 'ingredient') {\n      fetchDrinksByIngredient(searchTermParam)\n        .then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'name') {\n      fetchDrinksByName(searchTermParam).then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'firstletter') {\n      if (searchTermParam.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n      } else {\n        const letter = searchTermParam.slice(0, 1);\n        fetchDrinksByFirstLetter(letter).then((response) => redirectToDetails(response));\n      }\n    }\n    return drinks;\n  };\n\n  const searchRecipes = async (searchTermParam) => {\n    if (routeCurrent === '/comidas') {\n      await searchMeals(searchTermParam);\n    }\n    if (routeCurrent === '/bebidas') {\n      await searchDrinks(searchTermParam);\n    }\n  };\n\n  const handleRadioClick = ({ value }) => {\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    if (isSearchByIngredient && routeCurrent) {\n      if (routeCurrent === '/comidas') {\n        fetchMealsByIngredient(searchTerm)\n          .then((response) => redirectToDetails(response));\n      }\n      if (routeCurrent === '/bebidas') {\n        fetchDrinksByIngredient(searchTerm)\n          .then((response) => redirectToDetails(response));\n      }\n    }\n  }, [routeCurrent]);\n\n  return (\n    <form>\n      <div className=\"bg-red-700 p-1\">\n        <div className=\"bg-red-700\">\n          <label\n            className=\"recipes-radio bg-red-700\n          text-white\"\n            htmlFor=\"ingredient-search\"\n          >\n            <input\n              data-testid=\"ingredient-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              checked={ isSearchByIngredient || null }\n              value=\"ingredient\"\n              id=\"ingredient-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            <span className=\"ml-1 bg-red-700 text-white\">Ingrediente</span>\n          </label>\n\n          <label className=\"recipes-radio bg-red-700 text-white\" htmlFor=\"name-search\">\n            <input\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              value=\"name\"\n              id=\"name-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            <span className=\"ml-1 bg-red-700 text-white\">Nome</span>\n          </label>\n\n          <label\n            className=\"recipes-radio bg-red-700\n          text-white\"\n            htmlFor=\"first-letter-search\"\n          >\n            <input\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              value=\"firstletter\"\n              id=\"first-letter-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            <span className=\"ml-1 bg-red-700 text-white\">Primeira letra</span>\n          </label>\n          <div className=\"col-sm-12 bg-red-700 p-2\">\n            <button\n              data-testid=\"exec-search-btn\"\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={ () => searchRecipes(searchTerm) }\n            >\n              Buscar\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","const fetchDrinksByFirstLetter = async (receivedLetter) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${receivedLetter}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByFirstLetter;\n","const fetchDrinksCategories = async () => {\n  try {\n    const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinksCategories;\n","const fetchMealsCategories = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsCategories;\n","import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchMeals from '../services/fetchMeals';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchDrinksCategories from '../services/fetchDrinksCategories';\nimport fetchMealsCategories from '../services/fetchMealsCategories';\n\nconst Context = createContext();\nconst { Provider, Consumer } = Context;\n\nconst INICIAL_FAVORITE_STORAGE = localStorage\n  .getItem('favoriteRecipes')\n  ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n\nfunction RecipesProvider(props) {\n  const { children } = props;\n  const [email, setEmail] = useState('');\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [drinksCategories, setDrinksCategories] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [sharedProps, setSharedProps] = useState({});\n  const [recipesInProgress, setRecipeInProgress] = useState({ cocktails: {}, meals: {} });\n  const [favoriteStorage, setFavoriteStorage] = useState(INICIAL_FAVORITE_STORAGE);\n  const [isFavorite, setIsFavorite] = useState(favoriteStorage);\n  const [recipe, setRecipe] = useState({});\n  const [inProgress, setInProgress] = useState(false);\n  const [recipesDone, setRecipesDone] = useState([]);\n  const [isRecipesDone, setIsRecipesDone] = useState(false);\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [doneRecipesFilteredByName, setDoneRecipesFilteredByName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchByIngredient, setIsSearchByIngredient] = useState('');\n  const [routeCurrent, setRouteCurrent] = useState('');\n  const [historyCurrent, setHistoryCurrent] = useState('');\n\n  useEffect(() => {\n    fetchMeals().then((response) => setMeals(response.meals));\n    fetchDrinks().then((response) => setDrinks(response.drinks));\n    fetchDrinksCategories().then((response) => setDrinksCategories(response));\n    fetchMealsCategories().then((response) => setMealsCategories(response));\n  }, []);\n\n  const context = {\n    sharedProps,\n    setSharedProps,\n    email,\n    meals,\n    drinks,\n    mealsCategories,\n    areas,\n    ingredients,\n    setEmail,\n    setMeals,\n    setDrinks,\n    setMealsCategories,\n    setAreas,\n    setIngredients,\n    drinksCategories,\n    recipesInProgress,\n    setRecipeInProgress,\n    isFavorite,\n    setIsFavorite,\n    favoriteStorage,\n    setFavoriteStorage,\n    recipe,\n    setRecipe,\n    inProgress,\n    setInProgress,\n    recipesDone,\n    setRecipesDone,\n    isRecipesDone,\n    setIsRecipesDone,\n    doneRecipes,\n    setDoneRecipes,\n    doneRecipesFilteredByName,\n    setDoneRecipesFilteredByName,\n    searchTerm,\n    setSearchTerm,\n    isSearchByIngredient,\n    setIsSearchByIngredient,\n    routeCurrent,\n    setRouteCurrent,\n    historyCurrent,\n    setHistoryCurrent,\n  };\n\n  return <Provider value={ context }>{children}</Provider>;\n}\n\nexport { RecipesProvider as Provider, Consumer, Context };\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","const fetchDrinksByName = async (receivedName) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${receivedName}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByName;\n","const fetchMealsByFirstLetter = async (receivedLetter) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/search.php?f=${receivedLetter}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByFirstLetter;\n","const fetchMealsByName = async (receivedName) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${receivedName}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByName;\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport { Context } from '../context/Context';\n\nconst getDisabled = (email, password) => {\n  const checkEmail = () => {\n    const verify = /\\S+@\\S+\\.\\S+/;\n    return verify.test(email);\n  };\n  const passwordCharacters = 6;\n  const checkPassword = () => password.length > passwordCharacters;\n\n  return checkEmail() && checkPassword();\n};\n\nfunction Login({ history }) {\n  const { email, setEmail } = useContext(Context);\n  const [password, setPassword] = useState('');\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem('user', JSON.stringify({ email }));\n    history.push('/comidas');\n  };\n\n  return (\n    <section className=\"flex flex-column m-auto rounded-md w-11/12\">\n      <div\n        className=\"bg-white rounded-md decoration-black\n      text-base font-normal leading-6 p-12 relative\"\n      >\n        <h1 className=\"text-center bg-white mb-4 text-danger font-bold\">Login</h1>\n        <form className=\"bg-white\">\n          <div className=\"bg-white mb-1\">\n            <span className=\"bg-white\">Email</span>\n          </div>\n          <div className=\"wrap-input input-group label form-label mb-0 bg-white\">\n            <input\n              className=\"form-control mb-4\"\n              data-testid=\"email-input\"\n              aria-label=\"email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={ ({ target }) => setEmail(target.value) }\n            />\n          </div>\n          <div className=\"bg-white mb-1\">\n            <span className=\"bg-white\">Password</span>\n          </div>\n          <div className=\"wrap-input input-group label form-label mb-4\">\n            <input\n              id=\"password\"\n              className=\"form-control\"\n              data-testid=\"password-input\"\n              type=\"password\"\n              value={ password }\n              onChange={ ({ target }) => setPassword(target.value) }\n            />\n          </div>\n          <button\n            type=\"submit\"\n            data-testid=\"login-submit-btn\"\n            disabled={ !getDisabled(email, password) }\n            onClick={ handleClick }\n            className=\"btn btn-danger\"\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Login;\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\n\n// renderizaa card simples\nfunction RecipeCard({ itemToMap }) {\n  const { meals, drinks } = useContext(Context);\n  const renderedQuantity = 12;\n  return (\n    <div className=\"container-fluid d-flex flex-wrap justify-content-center\">\n      {itemToMap === 'meals' && meals\n        ? (\n          <div className=\"row\">\n            <h3\n              className=\"text-center\n              text-red-900 font-black  p-3\"\n              data-testid=\"page-title\"\n            >\n              Comidas\n\n            </h3>\n          </div>)\n        : (\n          <div className=\"row\">\n            <h3\n              className=\"text-center\n              text-red-900 font-black  p-3\"\n              data-testid=\"page-title\"\n            >\n              Bebidas\n\n            </h3>\n          </div>)}\n\n      <div className=\"d-flex row w-100 mb-40\">\n        <div className=\"d-flex flex-wrap justify-content-center gap-5\">\n          {(itemToMap === 'meals' && meals) ? meals.map((meal, index) => {\n            if (index < renderedQuantity) {\n              return (\n                <section className=\"card shadow-lg bg-body rounded\">\n                  <Link\n                    style={ { width: '40vw' } }\n                    data-testid={ `${index}-recipe-card` }\n                    key={ meal.idMeal }\n                    to={ `/comidas/${meal.idMeal}` }\n                  >\n                    <img\n                      className=\"card-img-top\"\n                      src={ meal.strMealThumb }\n                      alt={ meal.strMeal }\n                      data-testid={ `${index}-card-img` }\n                    />\n                    <div className=\"card-body bg-white\">\n                      <h4\n                        className=\"card-title bg-transparent\"\n                        data-testid={ `${index}-card-name` }\n                      >\n                        {meal.strMeal}\n                      </h4>\n                    </div>\n                  </Link>\n                </section>\n              );\n            }\n            return null;\n          })\n            : drinks.map((drink, index) => {\n              if (index < renderedQuantity) {\n                return (\n                  <section className=\"card shadow-lg bg-body rounded\">\n                    <Link\n                      style={ { width: '40vw' } }\n                      data-testid={ `${index}-recipe-card` }\n                      key={ drink.idDrink }\n                      to={ `/bebidas/${drink.idDrink}` }\n                    >\n                      <img\n                        className=\"card-img-top\"\n                        src={ drink.strDrinkThumb }\n                        alt={ drink.strDrink }\n                        data-testid={ `${index}-card-img` }\n                        width=\"100px\"\n                      />\n                      <div className=\"card-body bg-white\">\n                        <h4\n                          className=\"card-title bg-transparent\"\n                          data-testid={ `${index}-card-name` }\n                        >\n                          {drink.strDrink}\n                        </h4>\n                      </div>\n                    </Link>\n                  </section>\n                );\n              }\n              return null;\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRecipeCard.propTypes = {\n  itemToMap: PropTypes.string.isRequired,\n};\n\nexport default RecipeCard;\n","import React, { useContext } from 'react';\nimport DrinkIcon from '../images/drinkIcon.svg';\nimport ExploreIcon from '../images/exploreIcon.svg';\nimport MealIcon from '../images/mealIcon.svg';\nimport { Context } from '../context/Context';\n\nfunction Footer() {\n  const { sharedProps: { history } } = useContext(Context);\n\n  return (\n    <footer\n      className=\"fixed inset-x-0 bottom-0 flex\n      justify-between pl-5 pr-5 pb-3 pt-2 bg-red-700\"\n      data-testid=\"footer\"\n    >\n      <button\n        data-testid=\"drinks-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/bebidas') }\n        src={ DrinkIcon }\n      >\n        <img className=\"bg-transparent\" src={ DrinkIcon } alt=\"Drinks\" />\n      </button>\n      <button\n        data-testid=\"explore-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/explorar') }\n        src={ ExploreIcon }\n      >\n        <img className=\"bg-transparent\" src={ ExploreIcon } alt=\"Explorar\" />\n      </button>\n      <button\n        data-testid=\"food-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/comidas') }\n        src={ MealIcon }\n      >\n        <img className=\"bg-transparent\" src={ MealIcon } alt=\"Comidas\" />\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport { Context } from '../context/Context';\n\nfunction Header() {\n  const { searchTerm, setSearchTerm } = useContext(Context);\n  const [isVisible, setIsVisible] = useState(false);\n  function handleClick() {\n    return !isVisible ? setIsVisible(true) : setIsVisible(false);\n  }\n\n  return (\n    <div className=\"bg-red-700 p-2 w-screen top-0 text-center\">\n      <div className=\"flex justify-between p-3 bg-red-700\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-red-700\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <button\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          <img\n            src={ searchIcon }\n            alt=\"search-icon\"\n            className=\"bg-red-700\"\n            data-testid=\"search-top-btn\"\n          />\n        </button>\n      </div>\n      { isVisible && <input\n        className=\"self-center border-2 border-danger bg-red transition px-2 h-10\n        rounded-md focus:outline-none text-black text-lg sm:px-5 pr-10 sm:pr-16\n        m-2 p-2 sm:h-12\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Search\"\n        id=\"search__input\"\n        data-testid=\"search-input\"\n        value={ searchTerm }\n        onChange={ ({ target }) => setSearchTerm(target.value) }\n      /> }\n      <SearchBar />\n    </div>\n  );\n}\n\nexport default Header;\n","const fetchMealsByCategories = async (receivedCategory) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${receivedCategory}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByCategories;\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeCard from '../components/RecipeCard';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport fetchMealsByCategories from '../services/fetchMealsByCategories';\nimport fetchMeals from '../services/fetchMeals';\n\nfunction FoodsRecipes(props) {\n  const { mealsCategories, setMeals,\n    setSharedProps, setRouteCurrent, setHistoryCurrent } = useContext(Context);\n  const maxCategories = 8;\n  const [nameBtn, setnameBtn] = useState('');\n\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n\n  useEffect(() => {\n    setRouteCurrent(props.history.location.pathname);\n    setHistoryCurrent(props.history);\n  }, []);\n\n  const filteredByCategory = (categoryName, event) => {\n    if (nameBtn === event.target.name) {\n      fetchMeals().then((response) => setMeals(response.meals));\n      setnameBtn('');\n    } else {\n      fetchMealsByCategories(categoryName)\n        .then((response) => setMeals(response));\n      setnameBtn(event.target.name);\n    }\n  };\n  return (\n    <div className=\"recipes-container container-fluid p-0 bg-red-700\">\n      <div className=\"mb-52\">\n        <header className=\"border-0\">\n          <Header className=\"container-fluid\" props={ props } />\n        </header>\n        <section className=\"btn-group flex-wrap\" role=\"group\">\n          { mealsCategories.length !== 0\n      && mealsCategories.map((categorizeiMeal, index) => {\n        if (index < maxCategories) {\n          return (\n            <button\n              data-testid={ `${categorizeiMeal.strCategory}-category-filter` }\n              type=\"button\"\n              key={ categorizeiMeal.strCategory }\n              name={ categorizeiMeal.strCategory }\n              onClick={\n                (event) => filteredByCategory(categorizeiMeal.strCategory, event)\n              }\n              className=\"btn btn-outline-danger\"\n            >\n              {categorizeiMeal.strCategory}\n\n            </button>\n          );\n        }\n        return null;\n      })}\n          <button\n            type=\"button\"\n            data-testid=\"All-category-filter\"\n            onClick={\n              () => fetchMeals()\n                .then((response) => setMeals(response.meals))\n            }\n            className=\"btn btn-outline-danger\"\n          >\n            All\n          </button>\n        </section>\n        <div>\n          <RecipeCard\n            className=\"container-fluid\"\n            itemToMap=\"meals\"\n            props={ props }\n          />\n        </div>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default FoodsRecipes;\n\nFoodsRecipes.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport React, { useContext, useEffect } from 'react';\nimport getExit from '../helpers/getExit';\nimport Footer from '../components/Footer';\nimport { Context } from '../context/Context';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction Profile(props) {\n  const { history } = props;\n  const emailByLocalStorage = JSON.parse(localStorage.getItem('user'))\n    ? JSON.parse(localStorage.getItem('user')).email : 'usuário não identificado';\n  const { setSharedProps } = useContext(Context);\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n\n  return (\n    <div className=\"bg-red-700 w-screen\">\n      <div className=\"p-3 bg-red-700 m-0 grid grid-cols-3 grid-rows-1\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-red-700\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3\n          className=\"bg-transparent text-center font-black\"\n          data-testid=\"page-title\"\n        >\n          Perfil\n\n        </h3>\n      </div>\n      <div className=\"w-screen h-screen flex flex-col justify-center\">\n        <p\n          data-testid=\"profile-email\"\n          className=\"text-center text-xl font-semibold\"\n        >\n          {emailByLocalStorage}\n        </p>\n        <section className=\"text-center gap-10 flex flex-col\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-done-btn\"\n            onClick={ () => history.push('/receitas-feitas') }\n            className=\"text-2xl btn btn-outline-danger w-6/12 p-3 self-center \"\n          >\n            Receitas Feitas\n\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            onClick={ () => history.push('/receitas-favoritas') }\n            className=\"text-2xl btn btn-outline-danger w-6/12 p-3 self-center \"\n\n          >\n            Receitas Favoritas\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ () => getExit(history) }\n            className=\"text-2xl btn btn-outline-danger w-6/12 p-3 self-center\"\n          >\n            LOGOUT\n          </button>\n        </section>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Profile;\n","export default function getExit(history) {\n  localStorage.clear();\n  history.push('/');\n}\n","import React, { useState } from 'react';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction ButtonShare() {\n  const [wasCopied, setWasCopied] = useState(false);\n  const timeClipboard = 3000;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"align-middle h-4/6 w-10/12\"\n      data-testid=\"share-btn\"\n      onClick={ () => {\n        navigator.clipboard.writeText(window.location.href).then(() => {\n          setWasCopied(true);\n          setTimeout(() => { setWasCopied(false); }, timeClipboard);\n        });\n      } }\n    >\n      {wasCopied ? 'Link copiado!'\n        : <img\n          src={ shareIcon }\n          alt=\"Botão de compartilhamento\"\n          className=\"bg-transparent\"\n        />}\n    </button>\n  );\n}\n\nexport default ButtonShare;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport ButtonShare from './ButtonShare';\n\nfunction CardRecipesMade() {\n  const { doneRecipes,\n    setDoneRecipes, doneRecipesFilteredByName } = useContext(Context);\n\n  useEffect(() => {\n    setDoneRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n  }, []);\n\n  const verifyListRecipes = () => {\n    switch (doneRecipesFilteredByName) {\n    case 'Drinks':\n      return doneRecipes.filter((item) => item.type === 'bebida');\n    case 'Foods':\n      return doneRecipes.filter((item) => item.type === 'comida');\n    default:\n      return doneRecipes;\n    }\n  };\n\n  const gettingRecipeTags = (recipe, index) => (\n    recipe.tags.length > 0 ? recipe.tags.map((tag) => (\n      <p\n        key={ tag }\n        data-testid={ `${index}-${tag}-horizontal-tag` }\n        className=\"card-title bg-transparent m-auto\"\n      >\n        {tag}\n      </p>\n    )) : null);\n\n  return (\n    <section className=\"d-flex flex-wrap justify-content-center gap-5 p-3\">\n      {doneRecipes && verifyListRecipes().map((recipe, index) => (\n        recipe.type === 'comida' ? (\n          <section\n            key={ recipe.id }\n            className=\"card flex-row shadow-lg bg-body rounded w-full\"\n          >\n            <Link\n              to={ `/comidas/${recipe.id}` }\n              style={ { width: '40vw' } }\n            >\n              <img\n                className=\"card-img-top h-full\"\n                src={ recipe.image }\n                alt=\"colocar-alt-da-img\"\n                data-testid={ `${index}-horizontal-image` }\n              />\n            </Link>\n            <div className=\"card-body bg-white\">\n              <div className=\"bg-white flex justify-between gap-6\">\n                <p\n                  className=\"card-title bg-transparent\n                   text-muted m-auto text-xs align-middle\"\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {`${recipe.area} - ${recipe.category}`}\n                </p>\n                <ButtonShare />\n              </div>\n              <Link to={ `/comidas/${recipe.id}` }>\n                <h1\n                  className=\"card-title bg-transparent m-auto\"\n                  data-testid={ `${index}-horizontal-name` }\n                >\n                  {recipe.name}\n                </h1>\n              </Link>\n              <p\n                className=\"card-title bg-transparent m-auto\"\n                data-testid={ `${index}-horizontal-done-date` }\n              >\n                {`Feito em: ${recipe.doneDate}`}\n              </p>\n              {gettingRecipeTags(recipe, index)}\n            </div>\n          </section>\n        ) : (\n          <section\n            key={ recipe.id }\n            className=\"card flex-row shadow-lg bg-body rounded w-full\"\n          >\n            <Link\n              to={ `/bebidas/${recipe.id}` }\n              style={ { width: '40vw' } }\n            >\n              <img\n                src={ recipe.image }\n                alt=\"colocar-alt-da-img\"\n                data-testid={ `${index}-horizontal-image` }\n                className=\"card-img-top\"\n              />\n            </Link>\n            <div className=\"card-body bg-white\">\n              <div className=\"bg-white flex justify-between gap-6\">\n                <p\n                  className=\"card-title bg-transparent\n                      text-muted m-auto text-xs align-middle\"\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  {recipe.alcoholicOrNot}\n                </p>\n                <ButtonShare />\n              </div>\n              <Link to={ `/bebidas/${recipe.id}` }>\n                <h1\n                  className=\"card-title bg-transparent m-auto\"\n                  data-testid={ `${index}-horizontal-name` }\n                >\n                  {recipe.name}\n                </h1>\n              </Link>\n              <p\n                className=\"card-title bg-transparent m-auto\"\n                data-testid={ `${index}-horizontal-done-date` }\n              >\n                {`Feito em: ${recipe.doneDate}`}\n              </p>\n              {gettingRecipeTags(recipe, index)}\n            </div>\n          </section>\n        )\n      ))}\n    </section>\n  );\n}\n\nexport default CardRecipesMade;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport CardRecipesMade from '../components/CardRecipesMade';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction RecipesMade() {\n  const { setDoneRecipesFilteredByName } = useContext(Context);\n\n  const handleClickFiltered = ({ target }) => {\n    switch (target.name) {\n    case 'All':\n      return setDoneRecipesFilteredByName('All');\n    case 'Drinks':\n      return setDoneRecipesFilteredByName('Drinks');\n    case 'Foods':\n      return setDoneRecipesFilteredByName('Foods');\n    default:\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"h-screen w-screen flex flex-col\">\n      <section className=\"p-3 bg-red-700 m-0 grid grid-cols-4 grid-rows-1\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-transparent mt-1\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3\n          className=\"bg-transparent col-start-2 col-span-4 mt-auto mb-auto\"\n          data-testid=\"page-title\"\n        >\n          Receitas Feitas\n        </h3>\n      </section>\n      <section className=\"btn-group p-3\">\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"All\"\n          onClick={ handleClickFiltered }\n          className=\"btn btn-outline-danger\"\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"Foods\"\n          onClick={ handleClickFiltered }\n          className=\"btn btn-outline-danger\"\n        >\n          Foods\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"Drinks\"\n          onClick={ handleClickFiltered }\n          className=\"btn btn-outline-danger\"\n        >\n          Drinks\n        </button>\n      </section>\n      <CardRecipesMade />\n    </div>\n  );\n}\n\nexport default RecipesMade;\n\nRecipesMade.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.shape(),\n  }).isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport ButtonShare from '../components/ButtonShare';\nimport { Context } from '../context/Context';\nimport returnImgFavorite from '../helpers/returnImgFavorite';\n\nexport default function FavoritesRecipes() {\n  const [currFilter, setCurrFilter] = useState('all');\n  const { favoriteStorage, setFavoriteStorage } = useContext(Context);\n\n  const handleFavoriteButton = (id) => {\n    setFavoriteStorage((prev) => {\n      const newFavorites = prev\n        .filter((favoriteItem) => favoriteItem.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n      return newFavorites;\n    });\n  };\n\n  const handleFilter = ({ target }) => { setCurrFilter(target.name); };\n\n  return (\n    <div className=\"h-screen w-screen flex flex-col\">\n      <section className=\"p-3 bg-red-700 m-0 grid grid-cols-4 grid-rows-1\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-transparent mt-1\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3\n          className=\"bg-transparent col-start-2 col-span-4 mt-auto mb-auto\"\n          data-testid=\"page-title\"\n        >\n          Receitas Favoritas\n\n        </h3>\n      </section>\n      <section className=\"btn-group p-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"all\"\n          onClick={ handleFilter }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"foods\"\n          onClick={ handleFilter }\n        >\n          Foods\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"drinks\"\n          onClick={ handleFilter }\n        >\n          Drinks\n        </button>\n      </section>\n      <section className=\"d-flex flex-wrap justify-content-center gap-5 p-3\">\n        {\n          favoriteStorage.filter((favorite) => {\n            if (currFilter === 'foods') {\n              return favorite.type === 'comida';\n            }\n\n            if (currFilter === 'drinks') {\n              return favorite.type === 'bebida';\n            }\n\n            return true;\n          }).map((favorite, index) => (\n            <section\n              key={ favorite.id }\n              className=\"card flex-row shadow-lg bg-body rounded\"\n            >\n              <Link\n                to={ `/${favorite.type}s/${favorite.id}` }\n                style={ { width: '40vw' } }\n              >\n                <img\n                  src={ favorite.image }\n                  alt=\"Imagem da receita\"\n                  className=\"img-card-favorite\"\n                  data-testid={ `${index}-horizontal-image` }\n                />\n              </Link>\n              <div className=\"card-body bg-white\">\n                <div\n                  className=\"bg-white flex justify-between gap-6\"\n                  style={ { height: '25px' } }\n                >\n                  <p\n                    className=\"card-title bg-transparent\n                    text-muted m-auto text-xs align-middle\"\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    { `${favorite.area} - ${favorite.category}`}\n                    {` ${favorite.alcoholicOrNot}`}\n                  </p>\n                  <section className=\"in-progress-butons mb-36 bg-transparent\">\n                    <ButtonShare />\n                    <button\n                      type=\"button\"\n                      className=\"ml-2 h-full w-full\"\n                      name={ favorite.name }\n                      onClick={ () => handleFavoriteButton(favorite.id) }\n                    >\n                      {returnImgFavorite(index)}\n                    </button>\n                  </section>\n                </div>\n                <Link to={ `/${favorite.type}s/${favorite.id}` }>\n                  <h5\n                    className=\"card-title bg-transparent mt-3\"\n                    data-testid={ `${index}-horizontal-name` }\n                  >\n                    { favorite.name }\n                  </h5>\n                </Link>\n              </div>\n            </section>\n          ))\n        }\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function returnImg(index) {\n  return (\n    <img\n      className=\"h-full w-full bg-transparent\"\n      data-testid={ `${index}-horizontal-favorite-btn` }\n      src={ blackHeartIcon }\n      alt=\"Botão de compartilhamento\"\n    />\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport Footer from '../components/Footer';\n\nfunction ExploreScreen({ history }) {\n  return (\n    <div className=\"bg-red-700 w-screen\">\n      <div className=\" p-3 bg-red-700 m-0\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-red-700\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <section className=\"w-screen h-screen flex flex-col\">\n        <h3\n          className=\"text-center\n      text-red-900 font-black  p-3\"\n          data-testid=\"page-title\"\n        >\n          Explorar\n        </h3>\n        <div className=\"btn-group gap-4 p-3\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-food\"\n            onClick={ () => history.push('/explorar/comidas') }\n            className=\"btn btn-outline-danger\"\n          >\n            Explorar Comidas\n\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"explore-drinks\"\n            onClick={ () => history.push('/explorar/bebidas') }\n            className=\"btn btn-outline-danger\"\n          >\n            Explorar Bebidas\n\n          </button>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nExploreScreen.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExploreScreen;\n","const fetchRandomMeals = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchRandomMeals;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport fetchRandomMeals from '../services/fetchRandomMeals';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreFoods() {\n  const [randomRecipeID, setRandomRecipeID] = useState({});\n  const fetchRandom = async () => {\n    const recipeObj = await fetchRandomMeals();\n    setRandomRecipeID(recipeObj.meals[0].idMeal);\n  };\n  useEffect(() => {\n    fetchRandom();\n  }, []);\n\n  return (\n    <div className=\"bg-red-700 w-screen\">\n      <div className=\" p-3 bg-red-700 m-0\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-red-700\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <section className=\"w-screen h-screen\">\n        <h3\n          className=\"text-center\n      text-red-900 font-black  p-3\"\n          data-testid=\"page-title\"\n        >\n          Explorar Comidas\n\n        </h3>\n        <div className=\"btn-group gap-4 p-3\">\n          <Link to=\"/explorar/comidas/ingredientes\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              data-testid=\"explore-by-ingredient\"\n            >\n              Por Ingredientes\n            </button>\n          </Link>\n          <Link to=\"/explorar/comidas/area\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              data-testid=\"explore-by-area\"\n            >\n              Por Local de Origem\n            </button>\n          </Link>\n          <Link to={ `/comidas/${randomRecipeID}` }>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              data-testid=\"explore-surprise\"\n            >\n              Me Surpreenda!\n            </button>\n          </Link>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","const fetchRandomDrinks = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks[0];\n};\n\nexport default fetchRandomDrinks;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport fetchRandomDrinks from '../services/fetchRandomDrinks';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreDrinks() {\n  const [randomRecipeID, setRandomRecipeID] = useState({});\n  const fetchRandom = async () => {\n    const recipeObj = await fetchRandomDrinks();\n    setRandomRecipeID(recipeObj.idDrink);\n  };\n  useEffect(() => {\n    fetchRandom();\n  }, []);\n\n  return (\n    <div className=\"bg-red-700 w-screen\">\n      <div className=\"p-3 bg-red-700 m-0\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-red-700\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <div className=\"w-screen h-screen flex flex-col\">\n        <h3\n          className=\"text-center\n      text-red-900 font-black  p-3\"\n          data-testid=\"page-title\"\n        >\n          Explorar Bebidas\n        </h3>\n        <section className=\"btn-group gap-4 p-3 justify-center\">\n          <Link to=\"/explorar/bebidas/ingredientes\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              data-testid=\"explore-by-ingredient\"\n            >\n              Por Ingredientes\n            </button>\n          </Link>\n          <Link to={ `/bebidas/${randomRecipeID}` }>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              data-testid=\"explore-surprise\"\n            >\n              Me Surpreenda!\n            </button>\n          </Link>\n        </section>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","const fetchDrinksByCategory = async (receivedCategory) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${receivedCategory}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByCategory;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchDrinksByCategory from '../services/fetchDrinksByCategory';\n\nfunction DrinksRecipes(props) {\n  const { drinksCategories, setDrinks,\n    setSharedProps, setRouteCurrent, setHistoryCurrent } = useContext(Context);\n  const maxCategories = 5;\n  const [nameBtn, setnameBtn] = useState('');\n\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n  useEffect(() => {\n    setRouteCurrent(props.history.location.pathname);\n    setHistoryCurrent(props.history);\n  }, []);\n\n  const filteredByCategory = (categoryName, event) => {\n    if (nameBtn === event.target.name) {\n      fetchDrinks().then((response) => setDrinks(response.drinks));\n      setnameBtn('');\n    } else {\n      fetchDrinksByCategory(categoryName)\n        .then((response) => setDrinks(response));\n      setnameBtn(event.target.name);\n    }\n  };\n\n  return (\n    <div className=\"recipes-container container-fluid p-0 bg-red-700\">\n      <header className=\"border-0\">\n        <Header className=\"container-fluid\" props={ props } />\n      </header>\n      <section className=\"btn-group flex-wrap\" role=\"group\">\n        {drinksCategories.map((categoriseDrink, index) => {\n          if (index < maxCategories) {\n            return (\n              <button\n                data-testid={ `${categoriseDrink.strCategory}-category-filter` }\n                type=\"button\"\n                key={ categoriseDrink.strCategory }\n                name={ categoriseDrink.strCategory }\n                onClick={\n                  (event) => filteredByCategory(categoriseDrink.strCategory, event)\n                }\n                className=\"btn btn-outline-danger\"\n              >\n                {categoriseDrink.strCategory}\n              </button>\n            );\n          }\n          return null;\n        })}\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={\n            () => fetchDrinks()\n              .then((response) => setDrinks(response.drinks))\n          }\n          className=\"btn btn-outline-danger\"\n        >\n          All\n        </button>\n        <div>\n          <RecipeCard\n            className=\"container-fluid\"\n            itemToMap=\"drinks\"\n            props={ props }\n          />\n        </div>\n      </section>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default DrinksRecipes;\n\nDrinksRecipes.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","const fetchDrinkRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinkRecipeDetailsById;\n","const fetchMealRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { meals } = await response.json();\n    return meals;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchMealRecipeDetailsById;\n","const fetchDrinksRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinksRecipeDetailsById;\n","import fetchDrinksRecipeDetailsById from '../services/fetchDrinksRecipeDetailsById';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\n\nexport default async function getRecipe(ID, currentRouteName) {\n  if (currentRouteName === 'comidas') {\n    const responseMeals = await fetchMealRecipeDetailsById(ID);\n    return responseMeals;\n  }\n  if (currentRouteName === 'bebidas') {\n    const responseDrinks = await fetchDrinksRecipeDetailsById(ID);\n    return responseDrinks;\n  }\n}\n","export default function getRecipeObj(currentRouteName, recipeID, recipe) {\n  const recipeItem = recipe[0];\n  const recipeObj = currentRouteName === 'comidas' ? (\n    {\n      id: recipeID,\n      type: 'comida',\n      area: recipeItem.strArea,\n      category: recipeItem.strCategory,\n      alcoholicOrNot: '',\n      name: recipeItem.strMeal,\n      image: recipeItem.strMealThumb,\n    }\n  ) : (\n    {\n      id: recipeID,\n      type: 'bebida',\n      area: '',\n      category: recipeItem.strCategory ? recipeItem.strCategory : '',\n      alcoholicOrNot: recipeItem.strAlcoholic ? recipeItem.strAlcoholic : '',\n      name: recipeItem.strDrink,\n      image: recipeItem.strDrinkThumb,\n    }\n  );\n  return recipeObj;\n}\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../context/Context';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport getRecipe from '../helpers/getRecipe';\nimport getRecipeObj from '../helpers/getRecipeObj';\n\nfunction ButtonFavorite(props) {\n  const { props: { match: { params: { id } }, location: { pathname } } } = props;\n  const recipeID = id;\n  const { isFavorite, setIsFavorite,\n    favoriteStorage, setFavoriteStorage,\n    recipe, setRecipe } = useContext(Context);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) !== null) {\n      JSON.parse(localStorage.getItem('favoriteRecipes'))\n        .forEach((item) => (item.id === id ? setIsFavorite(true) : setIsFavorite(false)));\n    } else {\n      setIsFavorite(false);\n    }\n  }, [id, setIsFavorite]);\n\n  const handleFavoriteButton = () => {\n    const currentRouteName = pathname.split('/')[1];\n    if (isFavorite) {\n      setFavoriteStorage((prevState) => {\n        const newState = prevState.filter((favorite) => favorite.id !== recipeID);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n        setIsFavorite(false);\n        return newState;\n      });\n    } else {\n      const newState = [\n        ...favoriteStorage,\n        getRecipeObj(currentRouteName, recipeID, recipe),\n      ];\n      setFavoriteStorage(newState);\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n    }\n  };\n\n  useEffect(() => {\n    const setRecipes = async () => {\n      const currentRouteName = pathname.split('/')[1];\n      return currentRouteName === 'comidas'\n        ? setRecipe(await getRecipe(recipeID, currentRouteName))\n        : setRecipe(await getRecipe(recipeID, currentRouteName));\n    };\n    setRecipes();\n  }, [recipeID, pathname, setRecipe]);\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"favorite-btn\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      onClick={ handleFavoriteButton }\n      className=\"ml-4 h-4/6 w-10/12\"\n    >\n      <img\n        src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"Botão de favoritos\"\n      />\n    </button>\n  );\n}\n\nexport default ButtonFavorite;\n\nButtonFavorite.propTypes = {\n  props: PropTypes.shape({\n    match: PropTypes.shape({\n      params: PropTypes.shape().isRequired,\n    }),\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","const makeIngredientsList = (receivedRecipe) => {\n  const MAX_INGREDIENTS_NUMBER = 20;\n  const ingredientsList = [];\n  for (let index = 1; index <= MAX_INGREDIENTS_NUMBER; index += 1) {\n    // index inicial precisou ser 1 dada a característica do atributo strIngredient,\n    // que foi nomeado com o seu número no final, sendo de 1 a 20.\n    const ingredientName = receivedRecipe[`strIngredient${index}`];\n    const ingredientMeasure = receivedRecipe[`strMeasure${index}`];\n    const objectToPush = { ingredientName, ingredientMeasure };\n    if (ingredientName) ingredientsList.push(objectToPush);\n  }\n  return ingredientsList;\n};\n\nexport default makeIngredientsList;\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Context } from '../context/Context';\n\nfunction ButtonProgress({ props }) {\n  const { inProgress, isRecipesDone,\n    setRecipeInProgress, recipesInProgress } = useContext(Context);\n  const { match: { params: { id } }, location: { pathname }, history } = props;\n\n  const handleClick = () => {\n    const currentRouteName = pathname.split('/')[1];\n    const gettingRoute = currentRouteName === 'comidas' ? 'meals' : 'cocktails';\n    const currentRecipeId = pathname.split('/')[2];\n    setRecipeInProgress((state) => ({ ...state,\n      [gettingRoute]: { [currentRecipeId]: [] } }));\n\n    localStorage.setItem('inProgressRecipes', JSON.stringify(({ ...recipesInProgress,\n      [gettingRoute]: { [currentRecipeId]: [] } })));\n\n    history.push(`/${currentRouteName}/${id}/in-progress`);\n  };\n  return (\n    <button\n      type=\"button\"\n      className={ `fixed-bottom ${isRecipesDone && 'invisible'} style__btn` }\n      data-testid=\"start-recipe-btn\"\n      onClick={ handleClick }\n    >\n      {inProgress ? 'Continuar Receita' : 'Iniciar Receita'}\n    </button>\n  );\n}\n\nButtonProgress.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  location: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.string,\n  }).isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nexport default ButtonProgress;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction RecommendedsCard({ item, index, toRender }) {\n  return (\n    // este componente retorna um card para o carrossel de recomendadas\n    <div className=\"\">\n      {(toRender === 'drinks')\n        ? (\n          <section className=\"card shadow-lg bg-body rounded-lg w-max\">\n            <Link\n              className=\"\"\n              style={ { width: '40vw' } }\n              data-testid={ `${index}-recomendation-card` }\n              key={ `${index}${item.strDrink}` }\n              to={ `/bebidas/${item.idDrink}` }\n            >\n              <img\n                className=\"card-img-top\"\n                src={ item.strDrinkThumb }\n                alt={ item.strDrink }\n                data-testid=\"card-img\"\n              />\n\n              <div className=\"card-body bg-white\">\n                <h4\n                  className=\"card-title bg-transparent\"\n                  data-testid={ `${index}-recomendation-title` }\n                >\n                  {item.strDrink}\n                </h4>\n              </div>\n            </Link>\n          </section>)\n\n        : (\n          <section className=\"card shadow-lg bg-body rounded\">\n            <Link\n              className=\"custom-card col-xs-6 col-md-3\"\n              style={ { width: '40vw' } }\n              data-testid={ `${index}-recomendation-card` }\n              key={ `${index}${item.strMeal}` }\n              to={ `/bebidas/${item.idMeal}` }\n            >\n              <img\n                className=\"card-img-top\"\n                src={ item.strMealThumb }\n                alt={ item.strMeal }\n                data-testid=\"card-img\"\n              />\n              <div className=\"card-body bg-white\">\n                <h4\n                  className=\"card-title bg-transparent\"\n                  data-testid={ `${index}-recomendation-title` }\n                >\n                  {item.strMeal}\n                </h4>\n              </div>\n            </Link>\n          </section>\n        )}\n    </div>\n\n  );\n}\n\nRecommendedsCard.propTypes = {\n  index: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    idDrink: PropTypes.string,\n    idMeal: PropTypes.any,\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.any,\n    strMealThumb: PropTypes.any,\n  }).isRequired,\n  toRender: PropTypes.string.isRequired,\n};\n\nexport default RecommendedsCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Carousel, CarouselItem } from 'react-bootstrap';\nimport RecommendedsCard from './RecommendedsCard';\n\nfunction Recommendeds({ items }) {\n  const cardsToCarousel = items.map((recipe, index) => (\n    // renderizar o componente de card aqui.\n    <RecommendedsCard\n      item={ recipe }\n      index={ index }\n      key={ recipe.idDrink ? recipe.idDrink : recipe.idMeal }\n      toRender={ recipe.idMeal ? 'meals' : 'drinks' }\n    />\n  ));\n\n  return (\n    <div className=\"self-center mb-52 w-screen m-0 p-0\">\n      <Carousel indicators={ false }>\n        <CarouselItem>\n          <div className=\"flex gap-2 justify-center m-2\">\n            { cardsToCarousel[0] }\n            { cardsToCarousel[1] }\n          </div>\n        </CarouselItem>\n\n        <CarouselItem>\n          <div className=\"flex gap-2 justify-center\">\n            { cardsToCarousel[2] }\n            { cardsToCarousel[3] }\n          </div>\n        </CarouselItem>\n\n        <CarouselItem>\n          <div className=\"flex gap-2 justify-center\">\n            { cardsToCarousel[4] }\n            { cardsToCarousel[5] }\n          </div>\n        </CarouselItem>\n      </Carousel>\n\n    </div>\n  );\n}\n\nRecommendeds.propTypes = {\n  items: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Recommendeds;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context/Context';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport ButtonShare from './ButtonShare';\nimport ButtonFavorite from './ButtonFavorite';\nimport makeIngredientsList from '../helpers/makeIngredientsList';\nimport ButtonProgress from './ButtonProgress';\nimport fetchMeals from '../services/fetchMeals';\nimport Recommendeds from '../Recommendeds';\n\nfunction DrinkDetails({ props }) {\n  const { setSharedProps,\n    setInProgress,\n    recipesInProgress,\n    setRecipeInProgress,\n    setIsRecipesDone,\n    recipesDone,\n  } = useContext(Context);\n  const { match: { params: { id } }, location: { pathname } } = props;\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState();\n  const [toAccompany, setToAccompany] = useState([]);\n\n  useEffect(() => {\n    if (pathname.includes('comidas')) {\n      fetchMealRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    if (pathname.includes('bebidas')) {\n      fetchDrinkRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    setSharedProps(props);\n  }, [props, setSharedProps, id, pathname]);\n\n  useEffect(() => {\n    const ingredientsList = makeIngredientsList(recipe);\n    setIngredients(ingredientsList);\n  }, [recipe]);\n\n  useEffect(() => (localStorage.getItem('inProgressRecipes') !== null\n    ? setRecipeInProgress(JSON.parse(localStorage.getItem('inProgressRecipes')))\n    : localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress))), []);\n\n  useEffect(() => {\n    const currentRouteName = pathname.split('/')[1];\n    const currentRecipeId = pathname.split('/')[2];\n    const verifyRecipe = currentRouteName === 'comidas'\n      ? 'meals' : 'cocktails';\n    const gettingProgressRecipes = JSON.parse(localStorage\n      .getItem('inProgressRecipes'))[verifyRecipe];\n\n    return (localStorage.getItem('inProgressRecipes') !== null\n      && setInProgress(gettingProgressRecipes\n        ? Object.keys(gettingProgressRecipes)\n          .some((recipeIdStorage) => recipeIdStorage === currentRecipeId)\n        : false));\n  }, [pathname, setInProgress]);\n\n  useEffect(() => {\n    const generateAccompanimentsList = async () => {\n      const listToReturn = [];\n      const NUMBER_OF_ITEMS = 6;\n      for (let index = 0; index < NUMBER_OF_ITEMS; index += 1) {\n        fetchMeals().then(({ meals }) => listToReturn.push(meals[index]));\n      }\n      setToAccompany(listToReturn);\n    };\n    generateAccompanimentsList();\n  }, []);\n\n  useEffect(() => {\n    const currentRecipeId = pathname.split('/')[2];\n    const gettingRecipesDone = JSON.parse(localStorage\n      .getItem('doneRecipes'));\n    return localStorage.getItem('inProgressRecipes') !== null\n      && setIsRecipesDone(gettingRecipesDone\n        ? Array.from(gettingRecipesDone)\n          .some((recipeDoneIdStorage) => recipeDoneIdStorage.id === currentRecipeId)\n        : false);\n  }, [setIsRecipesDone, pathname, recipesDone]);\n\n  return (\n    <div className=\"container-fluid p-0 w-screen\">\n\n      <section>\n        <img\n          data-testid=\"recipe-photo\"\n          className=\"w-full\"\n          src={ recipe.strDrinkThumb }\n          alt={ `Foto da receita\n                ${recipe.strDrink}, que contém ${recipe.strIngredient1} \n                e ${recipe.strIngredient2} entre outros ingredientes.` }\n        />\n      </section>\n\n      <div className=\"p-3\">\n\n        <section className=\"flex justify-between pr-4 pt-3\">\n          <h1 data-testid=\"recipe-title\">{ recipe.strDrink }</h1>\n          <div className=\"flex\">\n            <ButtonShare props={ props } />\n            <ButtonFavorite props={ props } />\n          </div>\n        </section>\n        <section>\n          <h4\n            data-testid=\"recipe-category\"\n            className=\"text-muted\"\n          >\n            { recipe.strAlcoholic }\n          </h4>\n\n          <div>\n            <h1>Ingredients</h1>\n            {ingredients\n          && (\n            <div>\n              <ul className=\"bg-neutral mr-2 rounded-md\">\n                {ingredients.map((ingredient, index) => (\n                  <li\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                    key={ `${ingredient.ingredientName}${index}` }\n                    className=\"bg-transparent p-1 pl-3\"\n                  >\n                    {`${ingredient.ingredientName} - ${ingredient.ingredientMeasure}`}\n                  </li>\n                ))}\n              </ul>\n            </div>)}\n          </div>\n\n          <div className=\"\">\n            <h1>Instructions</h1>\n            <p\n              data-testid=\"instructions\"\n              className=\"bg-neutral rounded-md p-4 mb-7\"\n            >\n              { recipe.strInstructions }\n\n            </p>\n          </div>\n\n          <div className=\"flex flex-col w-full\">\n            <h1>Recommendeds</h1>\n\n            <Recommendeds items={ toAccompany } />\n          </div>\n        </section>\n        <div className=\"mb-40\">\n          <ButtonProgress props={ props } />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nDrinkDetails.propTypes = {\n  props: PropTypes.shape().isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default DrinkDetails;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Context } from '../context/Context';\nimport makeIngredientsList from '../helpers/makeIngredientsList';\nimport Recommendeds from '../Recommendeds';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport ButtonFavorite from './ButtonFavorite';\nimport ButtonProgress from './ButtonProgress';\nimport ButtonShare from './ButtonShare';\n\nfunction MealDetails({ props }) {\n  const { setSharedProps,\n    setInProgress,\n    recipesInProgress,\n    setRecipeInProgress,\n    setIsRecipesDone,\n    recipesDone,\n  } = useContext(Context);\n  const { match: { params: { id } },\n    location: { pathname } } = props;\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState();\n  const [toAccompany, setToAccompany] = useState([]);\n\n  useEffect(() => {\n    if (pathname.includes('comidas')) {\n      fetchMealRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    if (pathname.includes('bebidas')) {\n      fetchDrinkRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    setSharedProps(props);\n  }, [props, setSharedProps, id, pathname]);\n\n  useEffect(() => {\n    const ingredientsList = makeIngredientsList(recipe);\n    setIngredients(ingredientsList);\n  }, [recipe]);\n\n  useEffect(() => (localStorage.getItem('inProgressRecipes') !== null\n    ? setRecipeInProgress(JSON.parse(localStorage.getItem('inProgressRecipes')))\n    : localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress))), []);\n\n  useEffect(() => {\n    const currentRouteName = pathname.split('/')[1];\n    const currentRecipeId = pathname.split('/')[2];\n    const verifyRecipe = currentRouteName === 'comidas'\n      ? 'meals' : 'cocktails';\n    const gettingProgressRecipes = JSON.parse(localStorage\n      .getItem('inProgressRecipes'))[verifyRecipe];\n\n    return (localStorage.getItem('inProgressRecipes') !== null\n      && setInProgress(gettingProgressRecipes\n        ? Object.keys(gettingProgressRecipes)\n          .some((recipeIdStorage) => recipeIdStorage === currentRecipeId)\n        : false));\n  }, [pathname, setInProgress]);\n\n  useEffect(() => {\n    const generateAccompanimentsList = async () => {\n      const listToReturn = [];\n      const NUMBER_OF_ITEMS = 6;\n      for (let index = 0; index < NUMBER_OF_ITEMS; index += 1) {\n        fetchDrinks().then(({ drinks }) => listToReturn.push(drinks[index]));\n      }\n      setToAccompany(listToReturn);\n    };\n    generateAccompanimentsList();\n  }, []);\n\n  useEffect(() => {\n    const currentRecipeId = pathname.split('/')[2];\n    const gettingRecipesDone = JSON.parse(localStorage\n      .getItem('doneRecipes'));\n    return localStorage.getItem('inProgressRecipes') !== null\n      && setIsRecipesDone(gettingRecipesDone\n        ? Array.from(gettingRecipesDone)\n          .some((recipeDoneIdStorage) => recipeDoneIdStorage.id === currentRecipeId)\n        : false);\n  }, [setIsRecipesDone, pathname, recipesDone]);\n\n  return (\n\n    <div className=\"container-fluid p-0 w-screen\">\n      <section>\n        <img\n          data-testid=\"recipe-photo\"\n          className=\"w-full\"\n          src={ recipe.strMealThumb }\n          alt={ `Foto da receita\n            ${recipe.strMeal}, que contém ${recipe.strIngredient1} \n            e ${recipe.strIngredient2} entre outros ingredientes.` }\n        />\n      </section>\n\n      <div className=\"p-3\">\n        <section className=\"flex justify-between pr-4 pt-3\">\n          <h1 data-testid=\"recipe-title\">{ recipe.strMeal }</h1>\n          <div className=\"flex\">\n            <ButtonShare props={ props } />\n            <ButtonFavorite props={ props } />\n          </div>\n        </section>\n        <section>\n          <h4\n            data-testid=\"recipe-category\"\n            className=\"text-muted\"\n          >\n            { recipe.strCategory }\n          </h4>\n\n          <div className=\"\">\n            <h1>Ingredients</h1>\n            {ingredients\n      && (\n        <div>\n          <ul className=\"bg-neutral mr-2 rounded-md\">\n            {ingredients.map((ingredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ `${ingredient.ingredientName}${index}` }\n                className=\"bg-transparent p-1 pl-3\"\n              >\n                {`─ ${ingredient.ingredientName} - ${ingredient.ingredientMeasure}`}\n              </li>\n            ))}\n          </ul>\n        </div>)}\n          </div>\n\n          <div className=\"\">\n            <h1>Instructions</h1>\n            <p\n              className=\"bg-neutral rounded-md p-4 mb-7\"\n              data-testid=\"instructions\"\n            >\n              { recipe.strInstructions }\n            </p>\n          </div>\n\n          <h1>Video</h1>\n          <ReactPlayer\n            className=\"mb-8\"\n            data-testid=\"video\"\n            width=\"95%\"\n            url={ recipe.strYoutube }\n          />\n\n          <div className=\"flex flex-col w-full\">\n            <h1>Recommendeds</h1>\n\n            <Recommendeds items={ toAccompany } />\n          </div>\n\n        </section>\n        <div className=\"mb-40\">\n          <ButtonProgress props={ props } />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nMealDetails.propTypes = {\n  props: PropTypes.shape().isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape().isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MealDetails;\n","import React from 'react';\nimport DrinkDetails from './DrinkDetails';\nimport MealDetails from './MealDetails';\n\nfunction RecipeDetails(props) {\n  const { location: { pathname } } = props;\n  if (pathname.includes('comidas')) {\n    return (\n      <MealDetails props={ props } />\n    );\n  }\n\n  if (pathname.includes('bebidas')) {\n    return (\n      <DrinkDetails props={ props } />\n    );\n  }\n}\n\nexport default RecipeDetails;\n","function checkTarget(check) {\n  if (check) {\n    return 'listIngredients line-class';\n  }\n  return 'listIngredients ingredients-label';\n}\n\nexport default checkTarget;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport checkTarget from '../helpers/checkTarget';\nimport { Context } from '../context/Context';\nimport ButtonShare from '../components/ButtonShare';\nimport ButtonFavorite from '../components/ButtonFavorite';\n\nconst setStorage = (listIngredients, id) => {\n  const inProgressObj = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes')) : {};\n  const meals = Object.keys(inProgressObj).includes('meals')\n    ? inProgressObj.meals : {};\n  const inProgress = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes'))\n    : {\n      cocktails: {\n        [id]: [],\n      },\n      meals,\n    };\n  inProgress.cocktails[id] = listIngredients;\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n};\n\nconst setIngredientsInitial = (id) => {\n  if (localStorage.getItem('inProgressRecipes')) {\n    const inProgressObj = JSON.parse(localStorage.getItem('inProgressRecipes')).cocktails;\n    const listIngredients = Object.keys(inProgressObj).includes(id)\n      ? inProgressObj[id] : [];\n    return listIngredients;\n  }\n  return [];\n};\n\nexport default function DrinksRecipesInProgress(props) {\n  const { match: { params } } = props;\n  const recipeID = params.id;\n  const [checkedList, setCheckedList] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsList, setIngredientsList] = useState(setIngredientsInitial(recipeID));\n  const { setIsRecipesDone } = useContext(Context);\n\n  const fetchRecipe = async (ID) => {\n    const response = await fetchDrinkRecipeDetailsById(ID);\n    setRecipe(response[0]);\n    const ingredientMensure = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strMeasure') && value !== '');\n    const ingredientSetting = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strIngredient')\n      && value && value.lenght !== 0)\n      .reduce((prev, curr, index) => (\n        [...prev, `${curr[1]} - ${ingredientMensure[index][1]}`]\n      ), []);\n    setIngredients(ingredientSetting);\n    setCheckedList(ingredientSetting.map((ingredient) => (\n      ingredientsList.includes(ingredient)\n    )));\n  };\n\n  const toggleChecked = (index) => {\n    setCheckedList((prev) => {\n      const newList = [...prev];\n      newList[index] = !newList[index];\n      const IngredientsList = ingredients.filter((ingredient, innerIndex) => (\n        newList[innerIndex]\n      ));\n      setIngredientsList(IngredientsList);\n      setStorage(IngredientsList, recipeID);\n      return newList;\n    });\n  };\n\n  const handleClick = () => {\n    setIsRecipesDone(true);\n    const data = new Date();\n    const storageList = JSON.parse(localStorage.getItem('doneRecipes'));\n    localStorage.setItem('doneRecipes',\n      JSON.stringify([...storageList, {\n        id: recipe.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipe.strCategory,\n        alcoholicOrNot: recipe.strAlcoholic,\n        name: recipe.strDrink,\n        image: recipe.strDrinkThumb,\n        doneDate: `${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`,\n        tags: [],\n      }]));\n    return storageList === null && localStorage.setItem('doneRecipes',\n      JSON.stringify([{\n        id: recipe.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipe.strCategory,\n        alcoholicOrNot: recipe.strAlcoholic,\n        name: recipe.strDrink,\n        image: recipe.strDrinkThumb,\n        doneDate: `${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`,\n        tags: [],\n      }]));\n  };\n  useEffect(() => {\n    fetchRecipe(recipeID);\n  }, [recipeID]);\n  return (\n    <div className=\"container-fluid p-0 w-screen h-screen\">\n      <section>\n        <img\n          className=\"w-full\"\n          src={ recipe.strDrinkThumb }\n          alt=\"Foto do drink\"\n          data-testid=\"recipe-photo\"\n        />\n      </section>\n      <section className=\"p-3\">\n        <div className=\"flex justify-between pr-4 pt-3\">\n          <h4\n            className=\"self-center m-0\"\n            data-testid=\"recipe-title\"\n          >\n            { recipe.strDrink }\n          </h4>\n          <section className=\"in-progress-butons align-middle\">\n            <ButtonShare />\n            <ButtonFavorite props={ props } />\n          </section>\n        </div>\n        <h5\n          data-testid=\"recipe-category\"\n          className=\"text-muted\"\n        >\n          { recipe.strCategory }\n        </h5>\n        <div>\n          <ul className=\"bg-neutral rounded-md justify-start p-3 mb-3\">\n            {\n              ingredients.map((ingredient, index) => (\n                <li\n                  key={ ingredient }\n                  className={ `${checkTarget(checkedList[index])}\n                  p-1 pl-4 bg-neutral ml-3 rounded-md` }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <label\n                    htmlFor={ ingredient }\n                    className=\"form-check-label bg-transparent\"\n                  >\n                    <input\n                      name=\"check\"\n                      className=\"form-check-input bg-transparent\"\n                      id={ ingredient }\n                      checked={ checkedList[index] }\n                      onClick={ () => toggleChecked(index) }\n                      type=\"checkbox\"\n                    />\n                    <p\n                      className=\"ingredients-label bg-transparent m-0\"\n                    >\n                      { ingredient }\n                    </p>\n                  </label>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <section>\n          <h1>Instructions</h1>\n          <p\n            data-testid=\"instructions\"\n            className=\"bg-neutral rounded-md p-4 mb-7\"\n          >\n            { recipe.strInstructions }\n          </p>\n        </section>\n        <section className=\"text-center\">\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              className=\"style__btn-done\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ !checkedList.every((item) => item) }\n              onClick={ handleClick }\n            >\n              Finalizar Receita\n            </button>\n          </Link>\n        </section>\n      </section>\n    </div>\n  );\n}\n\nDrinksRecipesInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape(),\n  }).isRequired,\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport checkTarget from '../helpers/checkTarget';\nimport { Context } from '../context/Context';\nimport ButtonShare from '../components/ButtonShare';\nimport ButtonFavorite from '../components/ButtonFavorite';\n\nconst setStorage = (listIngredients, id) => {\n  const inProgressObj = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes')) : {};\n  const cocktails = Object.keys(inProgressObj).includes('cocktails')\n    ? inProgressObj.cocktails : {};\n  const inProgress = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes'))\n    : {\n      meals: {\n        [id]: [],\n      },\n      cocktails,\n    };\n  inProgress.meals[id] = listIngredients;\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n};\n\nconst setIngredientsInitial = (id) => {\n  if (localStorage.getItem('inProgressRecipes')) {\n    const inProgressObj = JSON.parse(localStorage.getItem('inProgressRecipes')).meals;\n    const listIngredients = Object.keys(inProgressObj).includes(id)\n      ? inProgressObj[id] : [];\n    return listIngredients;\n  }\n  return [];\n};\n\nexport default function MealsRecipesInProgress(props) {\n  const { match: { params } } = props;\n  const recipeID = params.id;\n  const [checkedList, setCheckedList] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsList, setIngredientsList] = useState(setIngredientsInitial(recipeID));\n  const { recipesDone, setRecipesDone, setIsRecipesDone } = useContext(Context);\n\n  const fetchRecipe = async (ID) => {\n    const response = await fetchMealRecipeDetailsById(ID);\n    setRecipe(response[0]);\n    const ingredientMensure = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strMeasure') && value !== '');\n    const ingredientSetting = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strIngredient')\n      && value && value.lenght !== 0)\n      .reduce((prev, curr, index) => (\n        [...prev, `${curr[1]} - ${ingredientMensure[index][1]}`]\n      ), []);\n    setIngredients(ingredientSetting);\n    setCheckedList(ingredientSetting.map((ingredient) => (\n      ingredientsList.includes(ingredient)\n    )));\n  };\n\n  const toggleChecked = (index) => {\n    setCheckedList((prev) => {\n      const newList = [...prev];\n      newList[index] = !newList[index];\n      const IngredientsList = ingredients.filter((ingredient, innerIndex) => (\n        newList[innerIndex]\n      ));\n      setIngredientsList(IngredientsList);\n      setStorage(IngredientsList, recipeID);\n      return newList;\n    });\n  };\n\n  const handleClick = () => {\n    setRecipesDone([...recipesDone, recipe]);\n    setIsRecipesDone(true);\n    const data = new Date();\n    const storageList = JSON.parse(localStorage.getItem('doneRecipes'));\n    localStorage.setItem('doneRecipes',\n      JSON.stringify([...storageList, {\n        id: recipe.idMeal,\n        type: 'comida',\n        area: recipe.strArea,\n        category: recipe.strCategory,\n        alcoholicOrNot: '',\n        name: recipe.strMeal,\n        image: recipe.strMealThumb,\n        doneDate: `${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`,\n        tags: [recipe.strTags],\n      }]));\n    return storageList === null && localStorage.setItem('doneRecipes',\n      JSON.stringify([{\n        id: recipe.idMeal,\n        type: 'comida',\n        area: recipe.strArea,\n        category: recipe.strCategory,\n        alcoholicOrNot: '',\n        name: recipe.strMeal,\n        image: recipe.strMealThumb,\n        doneDate: `${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`,\n        tags: [recipe.strTags],\n      }]));\n  };\n  useEffect(() => {\n    fetchRecipe(recipeID);\n  }, [recipeID]);\n  return (\n    <div className=\"container-fluid p-0 w-screen h-screen\">\n      <img\n        className=\"w-full\"\n        src={ recipe.strMealThumb }\n        alt=\"Foto do prato\"\n        data-testid=\"recipe-photo\"\n      />\n      <section className=\"p-3\">\n        <div className=\"flex justify-between pr-4 pt-3\">\n          <h4\n            data-testid=\"recipe-title\"\n          >\n            { recipe.strMeal }\n          </h4>\n          <section className=\"in-progress-butons align-middle\">\n            <ButtonShare />\n            <ButtonFavorite props={ props } />\n          </section>\n        </div>\n        <h5\n          data-testid=\"recipe-category\"\n          className=\"text-muted\"\n        >\n          { recipe.strCategory }\n        </h5>\n        <div>\n          <ul className=\"bg-neutral rounded-md justify-start p-3 mb-3\">\n            {\n              ingredients.map((ingredient, index) => (\n                <li\n                  key={ ingredient }\n                  className={ `${checkTarget(checkedList[index])}\n                  p-1 pl-4 bg-neutral ml-3 rounded-md` }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <label\n                    htmlFor={ ingredient }\n                    className=\"form-check-label bg-transparent\"\n                  >\n                    <input\n                      name=\"check\"\n                      className=\"form-check-input bg-transparent\"\n                      id={ ingredient }\n                      checked={ checkedList[index] }\n                      onClick={ () => toggleChecked(index) }\n                      type=\"checkbox\"\n                    />\n                    <p\n                      className=\"ingredients-label bg-transparent m-0\"\n                    >\n                      { ingredient }\n                    </p>\n                  </label>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <section>\n          <h1>Instructions</h1>\n          <p\n            data-testid=\"instructions\"\n            className=\"bg-neutral rounded-md p-4 mb-7\"\n          >\n            { recipe.strInstructions }\n          </p>\n        </section>\n        <section className=\"text-center\">\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              className=\"style__btn-done\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ !checkedList.every((item) => item) }\n              onClick={ handleClick }\n            >\n              Finalizar Receita\n            </button>\n          </Link>\n        </section>\n      </section>\n    </div>\n  );\n}\n\nMealsRecipesInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape().isRequired,\n  }).isRequired,\n};\n","const fetchDrinksIngredients = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksIngredients;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport { Context } from '../context/Context';\nimport fetchDrinksIngredients from '../services/fetchDrinksIngredients';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreDrinksIngredients() {\n  const [ingredients, setIngredients] = useState({});\n  const maxCards = 12;\n  const { setSearchTerm, setIsSearchByIngredient } = useContext(Context);\n\n  const fetchByIngredients = async () => {\n    const ingredientsObj = await fetchDrinksIngredients();\n    setIngredients(ingredientsObj.filter(\n      (__ingredient, index) => index < maxCards,\n    ));\n  };\n  useEffect(() => {\n    fetchByIngredients();\n  }, []);\n\n  const handleClick = (ingredientName) => {\n    setSearchTerm(ingredientName);\n    setIsSearchByIngredient(true);\n  };\n\n  return (\n    <div className=\"exp-ingred-meals-container gap-0 m-0 p-0 w-screen\">\n      <div className=\"p-3 bg-red-700 m-0 grid grid-cols-4 grid-rows-1\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-transparent mt-1\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3\n          className=\"bg-transparent col-start-2 col-span-4 mt-auto mb-auto\"\n          data-testid=\"page-title\"\n        >\n          Ingredientes\n\n        </h3>\n      </div>\n      <div className=\"grid grid-cols-2 gap-3 p-4 m-auto\">\n        {\n          ingredients.length > 0\n          && ingredients.map((ingredient, index) => (\n            <Link\n              to=\"/bebidas\"\n              key={ ingredient.strIngredient1 }\n              onClick={ () => handleClick(ingredient.strIngredient1) }\n              className=\"m-0\"\n            >\n              <div\n                data-testid={ `${index}-ingredient-card` }\n                className=\"exp-ingredient-card shadow-lg bg-body rounded m-auto\"\n              >\n                <img\n                  src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient\n                    .strIngredient1}-Small.png` }\n                  className=\"card-explore-ingredient m-auto\"\n                  alt=\"Imagem do Ingrediente\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <p\n                  data-testid={ `${index}-card-name` }\n                >\n                  { ingredient.strIngredient1 }\n                </p>\n              </div>\n            </Link>\n          ))\n        }\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinksIngredients;\n","const fetchIngredients = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchIngredients;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport fetchIngredients from '../services/fetchIngredients';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreFoodsIngredients() {\n  const [ingredients, setIngredients] = useState({});\n  const maxCards = 12;\n  const { setSearchTerm, setIsSearchByIngredient } = useContext(Context);\n\n  const fetchByIngredients = async () => {\n    const ingredientsObj = await fetchIngredients();\n    setIngredients(ingredientsObj.meals.filter(\n      (__ingredient, index) => index < maxCards,\n    ));\n  };\n\n  useEffect(() => {\n    fetchByIngredients();\n  }, []);\n\n  const handleClick = (ingredientName) => {\n    setSearchTerm(ingredientName);\n    setIsSearchByIngredient(true);\n  };\n\n  return (\n    <div className=\"exp-ingred-meals-container gap-0 m-0 p-0 w-screen\">\n      <div className=\"p-3 bg-red-700 m-0 grid grid-cols-4 grid-rows-1\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"bg-transparent mt-1\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3\n          className=\"bg-transparent col-start-2 col-span-4 mt-auto mb-auto\"\n          data-testid=\"page-title\"\n        >\n          Ingredientes\n\n        </h3>\n      </div>\n      <div className=\"grid grid-cols-2 gap-3 p-4 m-auto\">\n        {\n          ingredients.length > 0\n          && ingredients.map((ingredient, index) => (\n            <Link\n              to=\"/comidas\"\n              key={ ingredient.idIngredient }\n              onClick={ () => handleClick(ingredient.strIngredient) }\n              className=\"m-0\"\n            >\n              <div\n                data-testid={ `${index}-ingredient-card` }\n                className=\"exp-ingredient-card shadow-lg bg-body rounded m-auto\"\n              >\n                <img\n                  src={ `https://www.themealdb.com/images/ingredients/${ingredient\n                    .strIngredient}-Small.png` }\n                  className=\"card-explore-ingredient m-auto\"\n                  alt=\"Imagem do Ingrediente\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <p\n                  data-testid={ `${index}-card-name` }\n                >\n                  { ingredient.strIngredient }\n                </p>\n              </div>\n            </Link>\n          ))\n        }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsIngredients;\n","const fetchAreas = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchAreas;\n","import { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport fetchAreas from '../services/fetchAreas';\nimport fetchMeals from '../services/fetchMeals';\nimport Header from '../components/Header';\n\nfunction ExploreFoodsAreas() {\n  const [areas, setAreas] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [filterArea, setFilterArea] = useState('all');\n  const maxCards = 12;\n\n  const fetchAreasToState = async () => {\n    const fetchResponse = await fetchAreas();\n    setAreas(fetchResponse.meals);\n  };\n\n  const fetchMealsToContext = async () => {\n    const fetchResponse = await fetchMeals();\n    const arrObj = fetchResponse.meals;\n    setMeals(arrObj);\n  };\n\n  useEffect(() => {\n    fetchAreasToState();\n  }, []);\n\n  useEffect(() => {\n    fetchMealsToContext();\n  }, []);\n\n  return (\n    <div className=\"m-0 p-0 w-full h-full container-explore-area\">\n      <Header />\n      <h3 className=\"text-center p-3\" data-testid=\"page-title\">Explorar Origem</h3>\n      <label htmlFor=\"select-area\" className=\"w-full text-center\">\n        <select\n          className=\"w-10/12 m-auto pl-3 pr-10 py-2 duration-100\n          focus:shadow-blue-500 border-2 transition rounded-md\n          text-black text-lg focus:outline-none\n          focus:border-blue-400 focus:border-opacity-50\"\n          name=\"area\"\n          id=\"select-area\"\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ ({ target }) => setFilterArea(target.value) }\n        >\n          {\n            areas.length > 0\n          && areas\n            .map((area, index) => (\n              <option\n                value={ area.strArea }\n                key={ `${index} - ${area.strArea}` }\n                data-testid={ `${area.strArea}-option` }\n              >\n                { area.strArea }\n              </option>\n            ))\n          }\n          <option\n            value=\"all\"\n            data-testid=\"All-option\"\n          >\n            All\n          </option>\n        </select>\n      </label>\n      <div className=\"grid grid-cols-2 gap-3 p-4 m-0\">\n        {\n          meals\n            .filter((item) => (filterArea === 'all'\n              ? true : item.strArea === filterArea))\n            .filter((item, index) => index < maxCards)\n            .map((meal, index) => (\n              <Link\n                className=\"mb-10 ml-1\"\n                style={ { width: '40vw' } }\n                data-testid={ `${index}-recipe-card` }\n                key={ meal.idMeal }\n                to={ `/comidas/${meal.idMeal}` }\n              >\n                <div\n                  className=\"exp-ingredient-card shadow-lg bg-body rounded m-auto\"\n                >\n                  <img\n                    src={ meal.strMealThumb }\n                    alt={ meal.strMeal }\n                    data-testid={ `${index}-card-img` }\n                  />\n                  <h4 className=\"card-title p-2\" data-testid={ `${index}-card-name` }>\n                    {meal.strMeal}\n                  </h4>\n                </div>\n              </Link>\n            ))\n        }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsAreas;\n","import React from 'react';\n\nexport default function ErrorPage() {\n  return (\n    <h1>Not Found</h1>\n  );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport FoodsRecipes from './pages/FoodsRecipes';\nimport { Provider } from './context/Context';\nimport Profile from './pages/Profile';\nimport RecipesMade from './pages/RecipesMade';\nimport FavoritesRecipes from './pages/FavoritesRecipes';\nimport ExploreScreen from './pages/ExploreScreen';\nimport ExploreFoods from './pages/ExploreFoods';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport DrinksRecipes from './pages/DrinksRecipes';\nimport RecipeDetails from './components/RecipeDetails';\nimport DrinksRecipesInProgress from './pages/DrinksRecipesInProgress';\nimport MealsRecipsInProgress from './pages/MealsRecipesInProgress';\nimport ExploreDrinksIngredients from './pages/ExploreDrinksIngredients';\nimport ExploreFoodsIngredients from './pages/ExploreFoodsIngredients';\nimport ExploreFoodsAreas from './pages/ExploreFoodsAreas';\nimport ErrorPage from './pages/ErrorPage';\n\nfunction App() {\n  return (\n    <div\n      className=\"align-items-center d-flex flex-wrap bg-red-700 w-screen\"\n      style={ { height: '100vh', width: '100vw' } }\n    >\n      <Provider>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route path=\"/comidas/:id/in-progress\" component={ MealsRecipsInProgress } />\n          <Route path=\"/comidas/:id\" component={ RecipeDetails } />\n          <Route path=\"/comidas\" component={ FoodsRecipes } />\n          <Route path=\"/bebidas/:id/in-progress\" component={ DrinksRecipesInProgress } />\n          <Route path=\"/bebidas/:id\" component={ RecipeDetails } />\n          <Route path=\"/bebidas\" component={ DrinksRecipes } />\n          <Route path=\"/perfil\" component={ Profile } />\n          <Route path=\"/receitas-feitas\" component={ RecipesMade } />\n          <Route path=\"/receitas-favoritas\" component={ FavoritesRecipes } />\n          <Route exact path=\"/explorar\" component={ ExploreScreen } />\n          <Route\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExploreFoodsIngredients }\n          />\n          <Route path=\"/explorar/comidas/area\" component={ ExploreFoodsAreas } />\n          <Route\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExploreDrinksIngredients }\n          />\n          <Route path=\"/explorar/bebidas/area\" component={ ErrorPage } />\n          <Route path=\"/explorar/comidas\" component={ ExploreFoods } />\n          <Route path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n        </Switch>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}