{"version":3,"sources":["images/profileIcon.svg","images/shareIcon.svg","services/fetchMeals.js","images/blackHeartIcon.svg","services/fetchDrinks.js","images/whiteHeartIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","services/fetchDrinksByIngredient.js","services/fetchMealsByIngredient.js","images/searchIcon.svg","components/SearchBar.js","services/fetchDrinksByFirstLetter.js","services/fetchDrinksByName.js","services/fetchMealsByFirstLetter.js","services/fetchMealsByName.js","services/fetchDrinksCategories.js","services/fetchMealsCategories.js","context/Context.js","pages/Login.js","components/RecipeCard.js","components/Footer.jsx","components/Header.js","services/fetchMealsByCategories.js","pages/FoodsRecipes.js","pages/Profile.js","helpers/getExit.js","components/CardRecipesMade.js","pages/RecipesMade.js","pages/FavoritesRecipes.js","pages/ExploreScreen.js","services/fetchRandomMeals.js","pages/ExploreFoods.js","services/fetchRandomDrinks.js","pages/ExploreDrinks.js","services/fetchDrinksByCategory.js","pages/DrinksRecipes.js","services/fetchDrinkRecipeDetailsById.js","services/fetchMealRecipeDetailsById.js","components/ButtonShare.js","services/fetchDrinksRecipeDetailsById.js","helpers/getRecipe.js","helpers/getRecipeObj.js","components/ButtonFavorite.js","helpers/makeIngredientsList.js","components/ButtonProgress.js","RecommendedsCard.js","Recommendeds.js","components/DrinkDetails.js","components/MealDetails.js","components/RecipeDetails.js","helpers/checkTarget.js","pages/DrinksRecipesInProgress.js","pages/MealsRecipesInProgress.js","services/fetchDrinksIngredients.js","pages/ExploreDrinksIngredients.js","services/fetchIngredients.js","pages/ExploreFoodsIngredients.js","services/fetchAreas.js","pages/ExploreFoodsAreas.js","pages/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchMeals","a","fetch","response","json","jsonResponse","fetchDrinks","fetchDrinksByIngredient","receivedIngredient","API_URL","drinks","fetchMealsByIngredient","meals","SearchBar","useState","chosenSearch","setSearch","useContext","Context","setMeals","setDrinks","searchTerm","isSearchByIngredient","routeCurrent","historyCurrent","redirectToDetails","receivedResponse","global","alert","Object","keys","includes","length","push","idMeal","idDrink","searchMeals","searchTermParam","then","fetchMealsByName","letter","slice","fetchMealsByFirstLetter","searchDrinks","fetchDrinksByName","fetchDrinksByFirstLetter","searchRecipes","handleRadioClick","value","useEffect","className","htmlFor","data-testid","type","name","checked","id","onClick","target","receivedLetter","receivedName","fetchDrinksCategories","console","log","fetchMealsCategories","createContext","Provider","INICIAL_FAVORITE_STORAGE","Consumer","localStorage","getItem","JSON","parse","RecipesProvider","props","children","email","setEmail","mealsCategories","setMealsCategories","drinksCategories","setDrinksCategories","areas","setAreas","ingredients","setIngredients","sharedProps","setSharedProps","cocktails","recipesInProgress","setRecipeInProgress","favoriteStorage","setFavoriteStorage","isFavorite","setIsFavorite","recipe","setRecipe","inProgress","setInProgress","recipesDone","setRecipesDone","isRecipesDone","setIsRecipesDone","doneRecipes","setDoneRecipes","doneRecipesFilteredByName","setDoneRecipesFilteredByName","setSearchTerm","setIsSearchByIngredient","setRouteCurrent","setHistoryCurrent","context","getDisabled","password","test","Login","history","setPassword","onChange","disabled","event","preventDefault","setItem","stringify","RecipeCard","itemToMap","map","meal","index","style","width","key","to","src","strMealThumb","alt","strMeal","drink","strDrinkThumb","strDrink","Footer","DrinkIcon","ExploreIcon","MealIcon","Header","isVisible","setIsVisible","profileIcon","searchIcon","placeholder","fetchMealsByCategories","receivedCategory","FoodsRecipes","nameBtn","setnameBtn","location","pathname","categorizeiMeal","strCategory","categoryName","filteredByCategory","Profile","emailByLocalStorage","clear","getExit","CardRecipesMade","wasCopied","setWasCopied","handleClickCopy","route","navigator","clipboard","writeText","setTimeout","gettingRecipeTags","tags","tag","filter","item","verifyListRecipes","image","area","category","doneDate","shareIcon","alcoholicOrNot","RecipesMade","handleClickFiltered","FavoritesRecipes","currFilter","setCurrFilter","handleFilter","favorite","window","href","replace","recipeID","document","getElementById","innerText","prev","newFavorites","favoriteItem","blackHeartIcon","ExploreScreen","fetchRandomMeals","ExploreFoods","randomRecipeID","setRandomRecipeID","fetchRandom","recipeObj","fetchRandomDrinks","ExploreDrinks","fetchDrinksByCategory","DrinksRecipes","categoriseDrink","fetchDrinkRecipeDetailsById","receivedId","fetchMealRecipeDetailsById","ButtonShare","fetchDrinksRecipeDetailsById","getRecipe","ID","currentRouteName","responseMeals","responseDrinks","getRecipeObj","recipeItem","strArea","strAlcoholic","ButtonFavorite","match","params","forEach","split","setRecipes","whiteHeartIcon","prevState","newState","makeIngredientsList","receivedRecipe","ingredientsList","ingredientName","objectToPush","ingredientMeasure","ButtonProgress","gettingRoute","currentRecipeId","state","RecommendedsCard","toRender","Recommendeds","cardsToCarousel","items","Carousel","indicators","CarouselItem","DrinkDetails","toAccompany","setToAccompany","verifyRecipe","gettingProgressRecipes","some","recipeIdStorage","listToReturn","generateAccompanimentsList","gettingRecipesDone","Array","from","recipeDoneIdStorage","height","strIngredient1","strIngredient2","ingredient","strInstructions","MealDetails","url","strYoutube","RecipeDetails","checkTarget","check","DrinksRecipesInProgress","checkedList","setCheckedList","isClipboard","setIsClipboard","inProgressObj","setIngredientsInitial","setIngredientsList","fetchRecipe","ingredientMensure","entries","ingredientSetting","lenght","reduce","curr","toggleChecked","newList","IngredientsList","innerIndex","listIngredients","setStorage","every","MealsRecipesInProgress","fetchDrinksIngredients","ExploreDrinksIngredients","fetchByIngredients","ingredientsObj","__ingredient","fetchIngredients","ExploreFoodsIngredients","idIngredient","strIngredient","fetchAreas","ExploreFoodsAreas","filterArea","setFilterArea","fetchAreasToState","fetchResponse","fetchMealsToContext","arrObj","ErrorPage","App","exact","path","component","MealsRecipsInProgress","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.796f5964.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","const fetchMeals = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchMeals;\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","const fetchDrinks = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchDrinks;\n","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","const fetchDrinksByIngredient = async (receivedIngredient) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${receivedIngredient}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByIngredient;\n","const fetchMealsByIngredient = async (receivedIngredient) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${receivedIngredient}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByIngredient;\n","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context/Context';\nimport fetchDrinksByFirstLetter from '../services/fetchDrinksByFirstLetter';\nimport fetchDrinksByIngredient from '../services/fetchDrinksByIngredient';\nimport fetchDrinksByName from '../services/fetchDrinksByName';\nimport fetchMealsByFirstLetter from '../services/fetchMealsByFirstLetter';\nimport fetchMealsByIngredient from '../services/fetchMealsByIngredient';\nimport fetchMealsByName from '../services/fetchMealsByName';\n\nfunction SearchBar() {\n  const [chosenSearch, setSearch] = useState({});\n  const { meals, setMeals, drinks, setDrinks,\n    searchTerm, isSearchByIngredient, routeCurrent, historyCurrent,\n  } = useContext(Context);\n\n  const redirectToDetails = async (receivedResponse) => {\n    if (receivedResponse === null) {\n      return global.alert(\n        'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n      );\n    }\n    if (Object.keys(receivedResponse[0]).includes('idMeal')) {\n      await setMeals(receivedResponse);\n      if (receivedResponse.length === 1) {\n        historyCurrent.push(`/comidas/${receivedResponse[0].idMeal}`);\n      }\n    }\n    if (Object.keys(receivedResponse[0]).includes('idDrink')) {\n      await setDrinks(receivedResponse);\n      if (receivedResponse.length === 1) {\n        historyCurrent.push(`/bebidas/${receivedResponse[0].idDrink}`);\n      }\n    }\n  };\n\n  const searchMeals = (searchTermParam) => {\n    if (chosenSearch === 'ingredient') {\n      fetchMealsByIngredient(searchTermParam)\n        .then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'name') {\n      fetchMealsByName(searchTermParam)\n        .then(async (response) => redirectToDetails(response));\n    } else if (chosenSearch === 'firstletter') {\n      if (searchTermParam.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n      } else {\n        const letter = searchTermParam.slice(0, 1);\n        fetchMealsByFirstLetter(letter).then((response) => redirectToDetails(response));\n      }\n    }\n    return meals;\n  };\n\n  const searchDrinks = async (searchTermParam) => {\n    if (chosenSearch === 'ingredient') {\n      fetchDrinksByIngredient(searchTermParam)\n        .then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'name') {\n      fetchDrinksByName(searchTermParam).then((response) => redirectToDetails(response));\n    } else if (chosenSearch === 'firstletter') {\n      if (searchTermParam.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n      } else {\n        const letter = searchTermParam.slice(0, 1);\n        fetchDrinksByFirstLetter(letter).then((response) => redirectToDetails(response));\n      }\n    }\n    return drinks;\n  };\n\n  const searchRecipes = async (searchTermParam) => {\n    if (routeCurrent === '/comidas') {\n      await searchMeals(searchTermParam);\n    }\n    if (routeCurrent === '/bebidas') {\n      await searchDrinks(searchTermParam);\n    }\n  };\n\n  const handleRadioClick = ({ value }) => {\n    setSearch(value);\n  };\n\n  useEffect(() => {\n    if (isSearchByIngredient && routeCurrent) {\n      if (routeCurrent === '/comidas') {\n        fetchMealsByIngredient(searchTerm)\n          .then((response) => redirectToDetails(response));\n      }\n      if (routeCurrent === '/bebidas') {\n        fetchDrinksByIngredient(searchTerm)\n          .then((response) => redirectToDetails(response));\n      }\n    }\n  }, [routeCurrent]);\n\n  return (\n    <form className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <label className=\"recipes-radio\" htmlFor=\"ingredient-search\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              checked={ isSearchByIngredient }\n              value=\"ingredient\"\n              id=\"ingredient-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            Ingrediente\n          </label>\n\n          <label className=\"recipes-radio\" htmlFor=\"name-search\">\n            <input\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              value=\"name\"\n              id=\"name-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            Nome\n          </label>\n\n          <label className=\"recipes-radio\" htmlFor=\"first-letter-search\">\n            <input\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              name=\"search\"\n              value=\"firstletter\"\n              id=\"first-letter-search\"\n              onClick={ ({ target }) => handleRadioClick(target) }\n            />\n            Primeira letra\n          </label>\n          <div className=\"col-sm-12\">\n            <button\n              data-testid=\"exec-search-btn\"\n              type=\"button\"\n              className=\"recipes-search-btn\"\n              onClick={ () => searchRecipes(searchTerm) }\n            >\n              Buscar\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","const fetchDrinksByFirstLetter = async (receivedLetter) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${receivedLetter}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByFirstLetter;\n","const fetchDrinksByName = async (receivedName) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${receivedName}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByName;\n","const fetchMealsByFirstLetter = async (receivedLetter) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/search.php?f=${receivedLetter}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByFirstLetter;\n","const fetchMealsByName = async (receivedName) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${receivedName}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByName;\n","const fetchDrinksCategories = async () => {\n  try {\n    const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinksCategories;\n","const fetchMealsCategories = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsCategories;\n","import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchMeals from '../services/fetchMeals';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchDrinksCategories from '../services/fetchDrinksCategories';\nimport fetchMealsCategories from '../services/fetchMealsCategories';\n\nconst Context = createContext();\nconst { Provider, Consumer } = Context;\n\nconst INICIAL_FAVORITE_STORAGE = localStorage\n  .getItem('favoriteRecipes')\n  ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n\nfunction RecipesProvider(props) {\n  const { children } = props;\n  const [email, setEmail] = useState('');\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [drinksCategories, setDrinksCategories] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [sharedProps, setSharedProps] = useState({});\n  const [recipesInProgress, setRecipeInProgress] = useState({ cocktails: {}, meals: {} });\n  const [favoriteStorage, setFavoriteStorage] = useState(INICIAL_FAVORITE_STORAGE);\n  const [isFavorite, setIsFavorite] = useState(favoriteStorage);\n  const [recipe, setRecipe] = useState({});\n  const [inProgress, setInProgress] = useState(false);\n  const [recipesDone, setRecipesDone] = useState([]);\n  const [isRecipesDone, setIsRecipesDone] = useState(false);\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [doneRecipesFilteredByName, setDoneRecipesFilteredByName] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchByIngredient, setIsSearchByIngredient] = useState(false);\n  const [routeCurrent, setRouteCurrent] = useState('');\n  const [historyCurrent, setHistoryCurrent] = useState('');\n\n  useEffect(() => {\n    fetchMeals().then((response) => setMeals(response.meals));\n    fetchDrinks().then((response) => setDrinks(response.drinks));\n    fetchDrinksCategories().then((response) => setDrinksCategories(response));\n    fetchMealsCategories().then((response) => setMealsCategories(response));\n  }, []);\n\n  const context = {\n    sharedProps,\n    setSharedProps,\n    email,\n    meals,\n    drinks,\n    mealsCategories,\n    areas,\n    ingredients,\n    setEmail,\n    setMeals,\n    setDrinks,\n    setMealsCategories,\n    setAreas,\n    setIngredients,\n    drinksCategories,\n    recipesInProgress,\n    setRecipeInProgress,\n    isFavorite,\n    setIsFavorite,\n    favoriteStorage,\n    setFavoriteStorage,\n    recipe,\n    setRecipe,\n    inProgress,\n    setInProgress,\n    recipesDone,\n    setRecipesDone,\n    isRecipesDone,\n    setIsRecipesDone,\n    doneRecipes,\n    setDoneRecipes,\n    doneRecipesFilteredByName,\n    setDoneRecipesFilteredByName,\n    searchTerm,\n    setSearchTerm,\n    isSearchByIngredient,\n    setIsSearchByIngredient,\n    routeCurrent,\n    setRouteCurrent,\n    historyCurrent,\n    setHistoryCurrent,\n  };\n\n  return <Provider value={ context }>{children}</Provider>;\n}\n\nexport { RecipesProvider as Provider, Consumer, Context };\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport { Context } from '../context/Context';\n\nconst getDisabled = (email, password) => {\n  const checkEmail = () => {\n    const verify = /\\S+@\\S+\\.\\S+/;\n    return verify.test(email);\n  };\n  const passwordCharacters = 6;\n  const checkPassword = () => password.length > passwordCharacters;\n\n  return checkEmail() && checkPassword();\n};\n\nfunction Login({ history }) {\n  const { email, setEmail } = useContext(Context);\n  const [password, setPassword] = useState('');\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem('user', JSON.stringify({ email }));\n    history.push('/comidas');\n  };\n\n  return (\n    <main\n      className=\"recipes-row\"\n    >\n      <section>\n        <h1>Login</h1>\n        <form>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              id=\"email\"\n              type=\"email\"\n              data-testid=\"email-input\"\n              name=\"emailInput\"\n              value={ email }\n              onChange={ ({ target }) => setEmail(target.value) }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Senha:\n            <input\n              id=\"password\"\n              type=\"password\"\n              data-testid=\"password-input\"\n              value={ password }\n              onChange={ ({ target }) => setPassword(target.value) }\n            />\n          </label>\n          <button\n            className=\"recipes-button\"\n            type=\"submit\"\n            data-testid=\"login-submit-btn\"\n            disabled={ !getDisabled(email, password) }\n            onClick={ handleClick }\n          >\n            Entrar\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Login;\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\n\n// renderizaa card simples\nfunction RecipeCard({ itemToMap }) {\n  const { meals, drinks } = useContext(Context);\n  const renderedQuantity = 12;\n  return (\n    <div className=\"container-fluid d-flex flex-wrap justify-content-center\">\n      {itemToMap === 'meals' && meals\n        ? (\n          <div className=\"row\">\n            <h3 className=\"text-center\" data-testid=\"page-title\">Comidas</h3>\n          </div>)\n        : (\n          <div className=\"row\">\n            <h3 className=\"text-center\" data-testid=\"page-title\">Bebidas</h3>\n          </div>)}\n\n      <div className=\"d-flex row w-100\">\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {(itemToMap === 'meals' && meals) ? meals.map((meal, index) => {\n            if (index < renderedQuantity) {\n              return (\n                <Link\n                  className=\"custom-card col-sm-6 col-md-3\"\n                  style={ { width: '40vw' } }\n                  data-testid={ `${index}-recipe-card` }\n                  key={ meal.idMeal }\n                  to={ `/comidas/${meal.idMeal}` }\n                >\n                  <img\n                    className=\"img-thumbnail\"\n                    src={ meal.strMealThumb }\n                    alt={ meal.strMeal }\n                    data-testid={ `${index}-card-img` }\n                    width=\"100px\"\n                  />\n                  <h4 className=\"card-title\" data-testid={ `${index}-card-name` }>\n                    {meal.strMeal}\n                  </h4>\n                </Link>\n              );\n            }\n            return null;\n          })\n            : drinks.map((drink, index) => {\n              if (index < renderedQuantity) {\n                return (\n                  <Link\n                    className=\"custom-card col-sm-6 col-md-3\"\n                    style={ { width: '40vw' } }\n                    data-testid={ `${index}-recipe-card` }\n                    key={ drink.idDrink }\n                    to={ `/bebidas/${drink.idDrink}` }\n                  >\n                    <img\n                      className=\"img-thumbnail\"\n                      src={ drink.strDrinkThumb }\n                      alt={ drink.strDrink }\n                      data-testid={ `${index}-card-img` }\n                      width=\"100px\"\n                    />\n                    <h4 className=\"card-title\" data-testid={ `${index}-card-name` }>\n                      {drink.strDrink}\n                    </h4>\n                  </Link>\n                );\n              }\n              return null;\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRecipeCard.propTypes = {\n  itemToMap: PropTypes.string.isRequired,\n};\n\nexport default RecipeCard;\n","import React, { useContext } from 'react';\nimport DrinkIcon from '../images/drinkIcon.svg';\nimport ExploreIcon from '../images/exploreIcon.svg';\nimport MealIcon from '../images/mealIcon.svg';\nimport { Context } from '../context/Context';\n\nfunction Footer() {\n  const { sharedProps: { history } } = useContext(Context);\n  return (\n    <footer\n      className=\"fixed-bottom center d-flex justify-content-center\"\n      data-testid=\"footer\"\n    >\n      <button\n        data-testid=\"drinks-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/bebidas') }\n        src={ DrinkIcon }\n      >\n        <img src={ DrinkIcon } alt=\"Drinks\" />\n      </button>\n      <button\n        data-testid=\"explore-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/explorar') }\n        src={ ExploreIcon }\n      >\n        <img src={ ExploreIcon } alt=\"Explorar\" />\n      </button>\n      <button\n        data-testid=\"food-bottom-btn\"\n        type=\"button\"\n        onClick={ () => history.push('/comidas') }\n        src={ MealIcon }\n      >\n        <img src={ MealIcon } alt=\"Comidas\" />\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport { Context } from '../context/Context';\n\nfunction Header() {\n  const { searchTerm, setSearchTerm } = useContext(Context);\n  const [isVisible, setIsVisible] = useState(false);\n  function handleClick() {\n    return !isVisible ? setIsVisible(true) : setIsVisible(false);\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <div className=\"col-sm-4\">\n        {/* <h3 data-testid=\"page-title\">\n          Comidas\n        </h3> */}\n      </div>\n      <div className=\"col-sm-6\">\n        <button\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          <img\n            src={ searchIcon }\n            alt=\"search-icon\"\n            className=\"header-search-icon\"\n            data-testid=\"search-top-btn\"\n          />\n        </button>\n        { isVisible && <input\n          data-testid=\"search-input\"\n          id=\"search-input\"\n          type=\"text\"\n          placeholder=\"Busca...\"\n          className=\"recipes-search-input\"\n          value={ searchTerm }\n          onChange={ ({ target }) => setSearchTerm(target.value) }\n        /> }\n      </div>\n      <SearchBar />\n    </div>\n  );\n}\n\nexport default Header;\n","const fetchMealsByCategories = async (receivedCategory) => {\n  const API_URL = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${receivedCategory}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.meals;\n};\n\nexport default fetchMealsByCategories;\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeCard from '../components/RecipeCard';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport fetchMealsByCategories from '../services/fetchMealsByCategories';\nimport fetchMeals from '../services/fetchMeals';\n\nfunction FoodsRecipes(props) {\n  const { mealsCategories, setMeals,\n    setSharedProps, setRouteCurrent, setHistoryCurrent } = useContext(Context);\n  const maxCategories = 5;\n  const [nameBtn, setnameBtn] = useState('');\n\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n\n  useEffect(() => {\n    setRouteCurrent(props.history.location.pathname);\n    setHistoryCurrent(props.history);\n  }, []);\n\n  const filteredByCategory = (categoryName, event) => {\n    if (nameBtn === event.target.name) {\n      fetchMeals().then((response) => setMeals(response.meals));\n      setnameBtn('');\n    } else {\n      fetchMealsByCategories(categoryName)\n        .then((response) => setMeals(response));\n      setnameBtn(event.target.name);\n    }\n  };\n  return (\n    <div className=\"recipes-container container-fluid\">\n      <header className=\"row\">\n        <Header className=\"container-fluid\" props={ props } />\n      </header>\n      { mealsCategories.length !== 0\n      && mealsCategories.map((categorizeiMeal, index) => {\n        if (index < maxCategories) {\n          return (\n            <button\n              data-testid={ `${categorizeiMeal.strCategory}-category-filter` }\n              type=\"button\"\n              key={ categorizeiMeal.strCategory }\n              name={ categorizeiMeal.strCategory }\n              onClick={\n                (event) => filteredByCategory(categorizeiMeal.strCategory, event)\n              }\n            >\n              {categorizeiMeal.strCategory}\n\n            </button>\n          );\n        }\n        return null;\n      })}\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={\n          () => fetchMeals()\n            .then((response) => setMeals(response.meals))\n        }\n      >\n        All\n      </button>\n      <div className=\"row\">\n        <RecipeCard\n          className=\"container-fluid\"\n          itemToMap=\"meals\"\n          props={ props }\n        />\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default FoodsRecipes;\n\nFoodsRecipes.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport React, { useContext, useEffect } from 'react';\nimport getExit from '../helpers/getExit';\nimport Footer from '../components/Footer';\nimport { Context } from '../context/Context';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction Profile(props) {\n  const { history } = props;\n  const emailByLocalStorage = JSON.parse(localStorage.getItem('user'))\n    ? JSON.parse(localStorage.getItem('user')).email : 'usuário não identificado';\n  const { setSharedProps } = useContext(Context);\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <h3 className=\"text-center\" data-testid=\"page-title\">Perfil</h3>\n      <p data-testid=\"profile-email\">{emailByLocalStorage}</p>\n      <button\n        type=\"button\"\n        data-testid=\"profile-done-btn\"\n        onClick={ () => history.push('/receitas-feitas') }\n      >\n        Receitas Feitas\n\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"profile-favorite-btn\"\n        onClick={ () => history.push('/receitas-favoritas') }\n      >\n        Receitas Favoritas\n\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"profile-logout-btn\"\n        onClick={ () => getExit(history) }\n      >\n        Sair\n\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Profile;\n","export default function getExit(history) {\n  localStorage.clear();\n  history.push('/');\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction CardRecipesMade() {\n  const { doneRecipes,\n    setDoneRecipes, doneRecipesFilteredByName } = useContext(Context);\n  const [wasCopied, setWasCopied] = useState(false);\n  const timeClipboard = 3000;\n\n  useEffect(() => {\n    setDoneRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n  }, []);\n\n  const verifyListRecipes = () => {\n    switch (doneRecipesFilteredByName) {\n    case 'Drinks':\n      return doneRecipes.filter((item) => item.type === 'bebida');\n    case 'Foods':\n      return doneRecipes.filter((item) => item.type === 'comida');\n    default:\n      return doneRecipes;\n    }\n  };\n\n  const handleClickCopy = (route, id) => {\n    navigator.clipboard.writeText(`http://localhost:3000/${route}/${id}`).then(() => {\n      setWasCopied(true);\n      setTimeout(() => { setWasCopied(false); }, timeClipboard);\n    });\n  };\n\n  const gettingRecipeTags = (recipe, index) => (\n    recipe.tags.length > 0 ? recipe.tags.map((tag) => (\n      <p key={ tag } data-testid={ `${index}-${tag}-horizontal-tag` }>\n        {tag}\n      </p>\n    )) : null);\n\n  return (\n    <div>\n      {doneRecipes && verifyListRecipes().map((recipe, index) => (\n        recipe.type === 'comida' ? (\n          <div key={ recipe.id }>\n            <Link to={ `/comidas/${recipe.id}` }>\n              <img\n                src={ recipe.image }\n                alt=\"colocar-alt-da-img\"\n                data-testid={ `${index}-horizontal-image` }\n                className=\"img-thumbnail\"\n              />\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-top-text` }\n            >\n              {`${recipe.area} - ${recipe.category}`}\n            </p>\n            <Link to={ `/comidas/${recipe.id}` }>\n              <h1\n                data-testid={ `${index}-horizontal-name` }\n              >\n                {recipe.name}\n              </h1>\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-done-date` }\n            >\n              {`Receita feita em: ${recipe.doneDate}`}\n            </p>\n            {gettingRecipeTags(recipe, index)}\n            <button\n              type=\"button\"\n              className=\"btn\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              onClick={ () => handleClickCopy('comidas', recipe.id) }\n            >\n              {wasCopied ? 'Link copiado!'\n                : <img src={ shareIcon } alt=\"Botão de compartilhamento\" />}\n            </button>\n          </div>\n        ) : (\n          <div key={ recipe.id }>\n            <Link to={ `/bebidas/${recipe.id}` }>\n              <img\n                src={ recipe.image }\n                alt=\"colocar-alt-da-img\"\n                data-testid={ `${index}-horizontal-image` }\n                className=\"img-thumbnail\"\n              />\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-top-text` }\n            >\n              {recipe.alcoholicOrNot}\n            </p>\n            <Link to={ `/bebidas/${recipe.id}` }>\n              <h1\n                data-testid={ `${index}-horizontal-name` }\n              >\n                {recipe.name}\n              </h1>\n            </Link>\n            <p\n              data-testid={ `${index}-horizontal-done-date` }\n            >\n              {`Receita feita em: ${recipe.doneDate}`}\n            </p>\n            {gettingRecipeTags(recipe, index)}\n            <button\n              type=\"button\"\n              className=\"btn\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              onClick={ () => handleClickCopy('bebidas', recipe.id) }\n            >\n              {wasCopied ? 'Link copiado!'\n                : <img src={ shareIcon } alt=\"Botão de compartilhamento\" />}\n            </button>\n          </div>\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default CardRecipesMade;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport CardRecipesMade from '../components/CardRecipesMade';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction RecipesMade() {\n  const { setDoneRecipesFilteredByName } = useContext(Context);\n\n  const handleClickFiltered = ({ target }) => {\n    switch (target.name) {\n    case 'All':\n      return setDoneRecipesFilteredByName('All');\n    case 'Drinks':\n      return setDoneRecipesFilteredByName('Drinks');\n    case 'Foods':\n      return setDoneRecipesFilteredByName('Foods');\n    default:\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/perfil\">\n        <button type=\"button\">\n          <img\n            src={ profileIcon }\n            alt=\"profile-icon\"\n            className=\"header-profile-icon\"\n            data-testid=\"profile-top-btn\"\n          />\n        </button>\n      </Link>\n      <h3 className=\"text-center\" data-testid=\"page-title\">Receitas Feitas</h3>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        name=\"All\"\n        onClick={ handleClickFiltered }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        name=\"Foods\"\n        onClick={ handleClickFiltered }\n      >\n        Foods\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        name=\"Drinks\"\n        onClick={ handleClickFiltered }\n      >\n        Drinks\n      </button>\n      <CardRecipesMade />\n    </div>\n  );\n}\n\nexport default RecipesMade;\n\nRecipesMade.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.shape(),\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport profileIcon from '../images/profileIcon.svg';\n\nconst setFavoritesToState = () => {\n  if (localStorage.getItem('favoriteRecipes')) {\n    return JSON.parse(localStorage.getItem('favoriteRecipes'));\n  }\n  return [];\n};\n\nexport default function FavoritesRecipes() {\n  const [favoriteStorage, setFavoriteStorage] = useState(setFavoritesToState());\n  const [currFilter, setCurrFilter] = useState('all');\n\n  const handleFavoriteButton = (id) => {\n    setFavoriteStorage((prev) => {\n      const newFavorites = prev\n        .filter((favoriteItem) => favoriteItem.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n      return newFavorites;\n    });\n  };\n\n  const handleFilter = ({ target }) => { setCurrFilter(target.name); };\n  const handleShareBtn = (recipeID) => {\n    const element = document.getElementById(`favorite-${recipeID}`);\n    element.innerText = 'Link copiado!';\n  };\n\n  return (\n    <div className=\"favorite-container\">\n      <div>\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3 className=\"text-center\" data-testid=\"page-title\">Receitas Favoritas</h3>\n      </div>\n      <nav>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info btn-sm\"\n          data-testid=\"filter-by-all-btn\"\n          name=\"all\"\n          onClick={ handleFilter }\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info btn-sm\"\n          data-testid=\"filter-by-food-btn\"\n          name=\"foods\"\n          onClick={ handleFilter }\n        >\n          Foods\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info btn-sm\"\n          data-testid=\"filter-by-drink-btn\"\n          name=\"drinks\"\n          onClick={ handleFilter }\n        >\n          Drinks\n        </button>\n      </nav>\n      {\n        favoriteStorage.filter((favorite) => {\n          if (currFilter === 'foods') {\n            return favorite.type === 'comida';\n          }\n\n          if (currFilter === 'drinks') {\n            return favorite.type === 'bebida';\n          }\n\n          return true;\n        }).map((favorite, index) => (\n          <div\n            className=\"card-favorite\"\n            key={ favorite.name }\n          >\n            <Link to={ `/${favorite.type}s/${favorite.id}` }>\n              <img\n                src={ favorite.image }\n                alt=\"Imagem da receita\"\n                className=\"img-card-favorite\"\n                data-testid={ `${index}-horizontal-image` }\n              />\n            </Link>\n            <div className=\"card-text\">\n              <p\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                { `${favorite.area} - ${favorite.category}`}\n                {` ${favorite.alcoholicOrNot}`}\n              </p>\n              <Link to={ `/${favorite.type}s/${favorite.id}` }>\n                <h5\n                  data-testid={ `${index}-horizontal-name` }\n                >\n                  { favorite.name }\n                </h5>\n              </Link>\n              <nav className=\"in-progress-butons mb-36\">\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  id={ `favorite-${favorite.id}` }\n                  onClick={ () => {\n                    navigator.clipboard.writeText(window.location\n                      .href.replace('/receitas-favoritas', `/${favorite\n                        .type}s/${favorite.id}`))\n                      .then(() => { handleShareBtn(favorite.id); });\n                  } }\n                >\n                  <img\n                    src={ shareIcon }\n                    alt=\"Botão de compartilhamento\"\n                    data-testid={ `${index}-horizontal-share-btn` }\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  name={ favorite.name }\n                  onClick={ () => handleFavoriteButton(favorite.id) }\n                >\n                  <img\n                    data-testid={ `${index}-horizontal-favorite-btn` }\n                    src={ blackHeartIcon }\n                    alt=\"Botão de compartilhamento\"\n                  />\n                </button>\n              </nav>\n            </div>\n\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport Footer from '../components/Footer';\n\nfunction ExploreScreen({ history }) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <h3 className=\"text-center\" data-testid=\"page-title\">Explorar</h3>\n      <button\n        type=\"button\"\n        data-testid=\"explore-food\"\n        onClick={ () => history.push('/explorar/comidas') }\n      >\n        Explorar Comidas\n\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-drinks\"\n        onClick={ () => history.push('/explorar/bebidas') }\n      >\n        Explorar Bebidas\n\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nExploreScreen.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExploreScreen;\n","const fetchRandomMeals = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchRandomMeals;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport fetchRandomMeals from '../services/fetchRandomMeals';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreFoods() {\n  const [randomRecipeID, setRandomRecipeID] = useState({});\n  const fetchRandom = async () => {\n    const recipeObj = await fetchRandomMeals();\n    setRandomRecipeID(recipeObj.meals[0].idMeal);\n  };\n  useEffect(() => {\n    fetchRandom();\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3 className=\"text-center\" data-testid=\"page-title\">Explorar Comidas</h3>\n      </div>\n      <Link to=\"/explorar/comidas/ingredientes\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          data-testid=\"explore-by-ingredient\"\n        >\n          Por Ingredientes\n        </button>\n      </Link>\n      <Link to=\"/explorar/comidas/area\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          data-testid=\"explore-by-area\"\n        >\n          Por Local de Origem\n        </button>\n      </Link>\n      <Link to={ `/comidas/${randomRecipeID}` }>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          data-testid=\"explore-surprise\"\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","const fetchRandomDrinks = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks[0];\n};\n\nexport default fetchRandomDrinks;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport fetchRandomDrinks from '../services/fetchRandomDrinks';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreDrinks() {\n  const [randomRecipeID, setRandomRecipeID] = useState({});\n  const fetchRandom = async () => {\n    const recipeObj = await fetchRandomDrinks();\n    setRandomRecipeID(recipeObj.drinks[0].idDrink);\n  };\n  useEffect(() => {\n    fetchRandom();\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n        <h3 className=\"text-center\" data-testid=\"page-title\">Explorar Bebidas</h3>\n      </div>\n      <Link to=\"/explorar/bebidas/ingredientes\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          data-testid=\"explore-by-ingredient\"\n        >\n          Por Ingredientes\n        </button>\n      </Link>\n      <Link to={ `/bebidas/${randomRecipeID}` }>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          data-testid=\"explore-surprise\"\n        >\n          Me Surpreenda!\n        </button>\n      </Link>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","const fetchDrinksByCategory = async (receivedCategory) => {\n  const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${receivedCategory}`;\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksByCategory;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchDrinksByCategory from '../services/fetchDrinksByCategory';\n\nfunction DrinksRecipes(props) {\n  const { drinksCategories, setDrinks,\n    setSharedProps, setRouteCurrent, setHistoryCurrent } = useContext(Context);\n  const maxCategories = 5;\n  const [nameBtn, setnameBtn] = useState('');\n\n  useEffect(() => setSharedProps(props), [props, setSharedProps]);\n  useEffect(() => {\n    setRouteCurrent(props.history.location.pathname);\n    setHistoryCurrent(props.history);\n  }, []);\n\n  const filteredByCategory = (categoryName, event) => {\n    if (nameBtn === event.target.name) {\n      fetchDrinks().then((response) => setDrinks(response.drinks));\n      setnameBtn('');\n    } else {\n      fetchDrinksByCategory(categoryName)\n        .then((response) => setDrinks(response));\n      setnameBtn(event.target.name);\n    }\n  };\n\n  return (\n    <div className=\"recipes-container container-fluid\">\n      <header className=\"row\">\n        <Header className=\"container-fluid\" props={ props } />\n      </header>\n      {drinksCategories.map((categoriseDrink, index) => {\n        if (index < maxCategories) {\n          return (\n            <button\n              data-testid={ `${categoriseDrink.strCategory}-category-filter` }\n              type=\"button\"\n              key={ categoriseDrink.strCategory }\n              name={ categoriseDrink.strCategory }\n              onClick={\n                (event) => filteredByCategory(categoriseDrink.strCategory, event)\n              }\n            >\n              {categoriseDrink.strCategory}\n            </button>\n          );\n        }\n        return null;\n      })}\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={\n          () => fetchDrinks()\n            .then((response) => setDrinks(response.drinks))\n        }\n      >\n        All\n      </button>\n      <div className=\"row\">\n        <RecipeCard\n          className=\"container-fluid\"\n          itemToMap=\"drinks\"\n          props={ props }\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default DrinksRecipes;\n\nDrinksRecipes.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","const fetchDrinkRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinkRecipeDetailsById;\n","const fetchMealRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { meals } = await response.json();\n    return meals;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchMealRecipeDetailsById;\n","import React, { useState } from 'react';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction ButtonShare() {\n  const [wasCopied, setWasCopied] = useState(false);\n  const timeClipboard = 3000;\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"btn\"\n        data-testid=\"share-btn\"\n        onClick={ () => {\n          navigator.clipboard.writeText(window.location.href).then(() => {\n            setWasCopied(true);\n            setTimeout(() => { setWasCopied(false); }, timeClipboard);\n          });\n        } }\n      >\n        {wasCopied ? 'Link copiado!'\n          : <img src={ shareIcon } alt=\"Botão de compartilhamento\" />}\n      </button>\n    </div>\n  );\n}\n\nexport default ButtonShare;\n","const fetchDrinksRecipeDetailsById = async (receivedId) => {\n  try {\n    const API_URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${receivedId}`;\n    const response = await fetch(API_URL);\n    const { drinks } = await response.json();\n    return drinks;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default fetchDrinksRecipeDetailsById;\n","import fetchDrinksRecipeDetailsById from '../services/fetchDrinksRecipeDetailsById';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\n\nexport default async function getRecipe(ID, currentRouteName) {\n  if (currentRouteName === 'comidas') {\n    const responseMeals = await fetchMealRecipeDetailsById(ID);\n    return responseMeals;\n  }\n  if (currentRouteName === 'bebidas') {\n    const responseDrinks = await fetchDrinksRecipeDetailsById(ID);\n    return responseDrinks;\n  }\n}\n","export default function getRecipeObj(currentRouteName, recipeID, recipe) {\n  const recipeItem = recipe[0];\n  const recipeObj = currentRouteName === 'comidas' ? (\n    {\n      id: recipeID,\n      type: 'comida',\n      area: recipeItem.strArea,\n      category: recipeItem.strCategory,\n      alcoholicOrNot: '',\n      name: recipeItem.strMeal,\n      image: recipeItem.strMealThumb,\n    }\n  ) : (\n    {\n      id: recipeID,\n      type: 'bebida',\n      area: '',\n      category: recipeItem.strCategory ? recipeItem.strCategory : '',\n      alcoholicOrNot: recipeItem.strAlcoholic ? recipeItem.strAlcoholic : '',\n      name: recipeItem.strDrink,\n      image: recipeItem.strDrinkThumb,\n    }\n  );\n  return recipeObj;\n}\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../context/Context';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport getRecipe from '../helpers/getRecipe';\nimport getRecipeObj from '../helpers/getRecipeObj';\n\nfunction ButtonFavorite(props) {\n  const { props: { match: { params: { id } }, location: { pathname } } } = props;\n  const recipeID = id;\n  const { isFavorite, setIsFavorite,\n    favoriteStorage, setFavoriteStorage,\n    recipe, setRecipe } = useContext(Context);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) !== null) {\n      JSON.parse(localStorage.getItem('favoriteRecipes'))\n        .forEach((item) => (item.id === id ? setIsFavorite(true) : setIsFavorite(false)));\n    } else {\n      setIsFavorite(false);\n    }\n  }, [id, setIsFavorite]);\n\n  const handleFavoriteButton = () => {\n    const currentRouteName = pathname.split('/')[1];\n    if (isFavorite) {\n      setFavoriteStorage((prevState) => {\n        const newState = prevState.filter((favorite) => favorite.id !== recipeID);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n        setIsFavorite(false);\n        return newState;\n      });\n    } else {\n      const newState = [\n        ...favoriteStorage,\n        getRecipeObj(currentRouteName, recipeID, recipe),\n      ];\n      setFavoriteStorage(newState);\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n    }\n  };\n\n  useEffect(() => {\n    const setRecipes = async () => {\n      const currentRouteName = pathname.split('/')[1];\n      return currentRouteName === 'comidas'\n        ? setRecipe(await getRecipe(recipeID, currentRouteName))\n        : setRecipe(await getRecipe(recipeID, currentRouteName));\n    };\n    setRecipes();\n  }, [recipeID, pathname, setRecipe]);\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn\"\n      data-testid=\"favorite-btn\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      onClick={ handleFavoriteButton }\n    >\n      <img\n        src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"Botão de favoritos\"\n      />\n    </button>\n  );\n}\n\nexport default ButtonFavorite;\n\nButtonFavorite.propTypes = {\n  props: PropTypes.shape({\n    match: PropTypes.shape({\n      params: PropTypes.shape().isRequired,\n    }),\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","const makeIngredientsList = (receivedRecipe) => {\n  const MAX_INGREDIENTS_NUMBER = 20;\n  const ingredientsList = [];\n  for (let index = 1; index <= MAX_INGREDIENTS_NUMBER; index += 1) {\n    // index inicial precisou ser 1 dada a característica do atributo strIngredient,\n    // que foi nomeado com o seu número no final, sendo de 1 a 20.\n    const ingredientName = receivedRecipe[`strIngredient${index}`];\n    const ingredientMeasure = receivedRecipe[`strMeasure${index}`];\n    const objectToPush = { ingredientName, ingredientMeasure };\n    if (ingredientName) ingredientsList.push(objectToPush);\n  }\n  return ingredientsList;\n};\n\nexport default makeIngredientsList;\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Context } from '../context/Context';\n\nfunction ButtonProgress({ props }) {\n  const { inProgress, isRecipesDone,\n    setRecipeInProgress, recipesInProgress } = useContext(Context);\n  const { match: { params: { id } }, location: { pathname }, history } = props;\n\n  const handleClick = () => {\n    const currentRouteName = pathname.split('/')[1];\n    const gettingRoute = currentRouteName === 'comidas' ? 'meals' : 'cocktails';\n    const currentRecipeId = pathname.split('/')[2];\n    setRecipeInProgress((state) => ({ ...state,\n      [gettingRoute]: { [currentRecipeId]: [] } }));\n\n    localStorage.setItem('inProgressRecipes', JSON.stringify(({ ...recipesInProgress,\n      [gettingRoute]: { [currentRecipeId]: [] } })));\n\n    history.push(`/${currentRouteName}/${id}/in-progress`);\n  };\n  return (\n    <button\n      type=\"button\"\n      className={ `fixed-bottom ${isRecipesDone && 'invisible'}` }\n      data-testid=\"start-recipe-btn\"\n      onClick={ handleClick }\n    >\n      {inProgress ? 'Continuar Receita' : 'Iniciar Receita'}\n    </button>\n  );\n}\n\nButtonProgress.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  location: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.string,\n  }).isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nexport default ButtonProgress;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction RecommendedsCard({ item, index, toRender }) {\n  console.log(toRender);\n  return (\n    // este componente retorna um card para o carrossel de recomendadas\n    <div>\n      {(toRender === 'drinks')\n        ? (\n          <Link\n            className=\"custom-card col-xs-6 col-md-3\"\n            style={ { width: '40vw' } }\n            data-testid={ `${index}-recomendation-card` }\n            key={ `${index}${item.strDrink}` }\n            to={ `/bebidas/${item.idDrink}` }\n          >\n            <img\n              className=\"img-thumbnail\"\n              src={ item.strDrinkThumb }\n              alt={ item.strDrink }\n              data-testid=\"card-img\"\n              width=\"100px\"\n            />\n            <h4\n              className=\"card-title\"\n              data-testid={ `${index}-recomendation-title` }\n            >\n              {item.strDrink}\n            </h4>\n          </Link>)\n\n        : (\n          <Link\n            className=\"custom-card col-xs-6 col-md-3\"\n            style={ { width: '40vw' } }\n            data-testid={ `${index}-recomendation-card` }\n            key={ `${index}${item.strMeal}` }\n            to={ `/bebidas/${item.idMeal}` }\n          >\n            <img\n              className=\"img-thumbnail\"\n              src={ item.strMealThumb }\n              alt={ item.strMeal }\n              data-testid=\"card-img\"\n              width=\"100px\"\n            />\n            <h4\n              className=\"card-title\"\n              data-testid={ `${index}-recomendation-title` }\n            >\n              {item.strMeal}\n            </h4>\n          </Link>)}\n    </div>\n\n  );\n}\n\nRecommendedsCard.propTypes = {\n  index: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    idDrink: PropTypes.string,\n    idMeal: PropTypes.any,\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.any,\n    strMealThumb: PropTypes.any,\n  }).isRequired,\n  toRender: PropTypes.string.isRequired,\n};\n\nexport default RecommendedsCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Carousel, CarouselItem } from 'react-bootstrap';\nimport RecommendedsCard from './RecommendedsCard';\n\n/**\n * Consultei a PR do Grupo 10, em:\n * https://github.com/tryber/sd-015-b-project-recipes-app/pull/79/files\n * Para entender que para mostrar um carrossel eu deveria primeiro criar um componente para renderizar os cards\n * e passar minha lista de items para carregar nos cards.\n * Após isto, eu precisava criar um outro componente para renderizar um card e passar a ele qual índice deveria ser\n * mostrado por vez.\n * E por fim, no retorno do meu componente Recommendeds eu aprendi um pouco sobre como utilizar o Carousel do react-bootstrap\n * para renderizar os itens da forma que o requisito do projeto pedia.\n * Também deixo o agradecimento aos mentores Gabriel Espíndola e Arthur Procópio, sendo que o primeiro me ajudou a entender como\n * montar a lista de receitas para enviar à seção recomendadas e o segundo me ajudou a entender que o teste não aceita que esta\n * lista seja feita de forma aleatória.\n * Obrigado a todas as pessoas que me ajudaram mesmo sem tomar conhecimento.\n */\n\nfunction Recommendeds({ items }) {\n  const cardsToCarousel = items.map((recipe, index) => (\n    // renderizar o componente de card aqui.\n    <RecommendedsCard\n      item={ recipe }\n      index={ index }\n      key={ recipe.idDrink ? recipe.idDrink : recipe.idMeal }\n      toRender={ recipe.idMeal ? 'meals' : 'drinks' }\n    />\n  ));\n\n  return (\n    <div className=\"row\">\n      <Carousel indicators={ false }>\n        <CarouselItem>\n          <div className=\"row\">\n            { cardsToCarousel[0] }\n            { cardsToCarousel[1] }\n          </div>\n        </CarouselItem>\n\n        <CarouselItem>\n          <div className=\"row\">\n            { cardsToCarousel[2] }\n            { cardsToCarousel[3] }\n          </div>\n        </CarouselItem>\n\n        <CarouselItem>\n          <div className=\"row\">\n            { cardsToCarousel[4] }\n            { cardsToCarousel[5] }\n          </div>\n        </CarouselItem>\n      </Carousel>\n\n    </div>\n  );\n}\n\nRecommendeds.propTypes = {\n  items: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Recommendeds;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '../context/Context';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport ButtonShare from './ButtonShare';\nimport ButtonFavorite from './ButtonFavorite';\nimport makeIngredientsList from '../helpers/makeIngredientsList';\nimport ButtonProgress from './ButtonProgress';\nimport fetchMeals from '../services/fetchMeals';\nimport Recommendeds from '../Recommendeds';\n\nfunction DrinkDetails({ props }) {\n  const { setSharedProps,\n    setInProgress,\n    recipesInProgress,\n    setRecipeInProgress,\n    setIsRecipesDone,\n    recipesDone,\n  } = useContext(Context);\n  const { match: { params: { id } }, location: { pathname } } = props;\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState();\n  const [toAccompany, setToAccompany] = useState([]);\n\n  useEffect(() => {\n    if (pathname.includes('comidas')) {\n      fetchMealRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    if (pathname.includes('bebidas')) {\n      fetchDrinkRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    setSharedProps(props);\n  }, [props, setSharedProps, id, pathname]);\n\n  useEffect(() => {\n    const ingredientsList = makeIngredientsList(recipe);\n    setIngredients(ingredientsList);\n  }, [recipe]);\n\n  useEffect(() => (localStorage.getItem('inProgressRecipes') !== null\n    ? setRecipeInProgress(JSON.parse(localStorage.getItem('inProgressRecipes')))\n    : localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress))), []);\n\n  useEffect(() => {\n    const currentRouteName = pathname.split('/')[1];\n    const currentRecipeId = pathname.split('/')[2];\n    const verifyRecipe = currentRouteName === 'comidas'\n      ? 'meals' : 'cocktails';\n    const gettingProgressRecipes = JSON.parse(localStorage\n      .getItem('inProgressRecipes'))[verifyRecipe];\n\n    return (localStorage.getItem('inProgressRecipes') !== null\n      && setInProgress(gettingProgressRecipes\n        ? Object.keys(gettingProgressRecipes)\n          .some((recipeIdStorage) => recipeIdStorage === currentRecipeId)\n        : false));\n  }, [pathname, setInProgress]);\n\n  useEffect(() => {\n    const generateAccompanimentsList = async () => {\n      const listToReturn = [];\n      const NUMBER_OF_ITEMS = 6;\n      for (let index = 0; index < NUMBER_OF_ITEMS; index += 1) {\n        fetchMeals().then(({ meals }) => listToReturn.push(meals[index]));\n      }\n      setToAccompany(listToReturn);\n    };\n    generateAccompanimentsList();\n  }, []);\n\n  useEffect(() => {\n    const currentRecipeId = pathname.split('/')[2];\n    const gettingRecipesDone = JSON.parse(localStorage\n      .getItem('doneRecipes'));\n    return localStorage.getItem('inProgressRecipes') !== null\n      && setIsRecipesDone(gettingRecipesDone\n        ? Array.from(gettingRecipesDone)\n          .some((recipeDoneIdStorage) => recipeDoneIdStorage.id === currentRecipeId)\n        : false);\n  }, [setIsRecipesDone, pathname, recipesDone]);\n\n  return (\n    <div\n      className=\"container-fluid\"\n      style={ { height: '100vh', width: '100vw' } }\n    >\n      <div className=\"row d-flex w-100\">\n\n        <div className=\"col-12 d-flex w-100\">\n          <img\n            data-testid=\"recipe-photo\"\n            className=\"img-fluid\"\n            src={ recipe.strDrinkThumb }\n            alt={ `Foto da receita\n                ${recipe.strDrink}, que contém ${recipe.strIngredient1} \n                e ${recipe.strIngredient2} entre outros ingredientes.` }\n          />\n        </div>\n\n        <div className=\"row d-flex justify-content-between\">\n          <div className=\"col-6\">\n            <h1 data-testid=\"recipe-title\">{ recipe.strDrink }</h1>\n          </div>\n          <div className=\"col-3\">\n            <ButtonShare props={ props } />\n          </div>\n          <div className=\"col-3\">\n            <ButtonFavorite props={ props } />\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h3>{ recipe.strCategory }</h3>\n          <h5 data-testid=\"recipe-category\">{ recipe.strAlcoholic }</h5>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>Ingredients</h1>\n        </div>\n        {ingredients\n          && (\n            <div className=\"col-12\">\n              <ul>\n                {ingredients.map((ingredient, index) => (\n                  <li\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                    key={ `${ingredient.ingredientName}${index}` }\n                  >\n                    {`${ingredient.ingredientName} - ${ingredient.ingredientMeasure}`}\n                  </li>\n                ))}\n              </ul>\n            </div>)}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>Instructions</h1>\n        </div>\n        <div>\n          <p data-testid=\"instructions\">{ recipe.strInstructions }</p>\n        </div>\n      </div>\n\n      <div\n        className=\"row d-flex\"\n        style={ { width: '100vw' } }\n      >\n        <div\n          className=\"d-flex flex-wrap\"\n          style={ { width: '100vw' } }\n        >\n          <div className=\"row\">\n            <h1>Recommendeds</h1>\n          </div>\n          <Recommendeds items={ toAccompany } />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <ButtonProgress props={ props } />\n      </div>\n\n    </div>\n  );\n}\n\nDrinkDetails.propTypes = {\n  props: PropTypes.shape().isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default DrinkDetails;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Context } from '../context/Context';\nimport makeIngredientsList from '../helpers/makeIngredientsList';\nimport Recommendeds from '../Recommendeds';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport fetchDrinks from '../services/fetchDrinks';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport ButtonFavorite from './ButtonFavorite';\nimport ButtonProgress from './ButtonProgress';\nimport ButtonShare from './ButtonShare';\n\nfunction MealDetails({ props }) {\n  const { setSharedProps,\n    setInProgress,\n    recipesInProgress,\n    setRecipeInProgress,\n    setIsRecipesDone,\n    recipesDone,\n  } = useContext(Context);\n  const { match: { params: { id } },\n    location: { pathname } } = props;\n  const [recipe, setRecipe] = useState('');\n  const [ingredients, setIngredients] = useState();\n  const [toAccompany, setToAccompany] = useState([]);\n\n  useEffect(() => {\n    if (pathname.includes('comidas')) {\n      fetchMealRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    if (pathname.includes('bebidas')) {\n      fetchDrinkRecipeDetailsById(id).then((response) => setRecipe(response[0]));\n    }\n    setSharedProps(props);\n  }, [props, setSharedProps, id, pathname]);\n\n  useEffect(() => {\n    const ingredientsList = makeIngredientsList(recipe);\n    setIngredients(ingredientsList);\n  }, [recipe]);\n\n  useEffect(() => (localStorage.getItem('inProgressRecipes') !== null\n    ? setRecipeInProgress(JSON.parse(localStorage.getItem('inProgressRecipes')))\n    : localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress))), []);\n\n  useEffect(() => {\n    const currentRouteName = pathname.split('/')[1];\n    const currentRecipeId = pathname.split('/')[2];\n    const verifyRecipe = currentRouteName === 'comidas'\n      ? 'meals' : 'cocktails';\n    const gettingProgressRecipes = JSON.parse(localStorage\n      .getItem('inProgressRecipes'))[verifyRecipe];\n\n    return (localStorage.getItem('inProgressRecipes') !== null\n      && setInProgress(gettingProgressRecipes\n        ? Object.keys(gettingProgressRecipes)\n          .some((recipeIdStorage) => recipeIdStorage === currentRecipeId)\n        : false));\n  }, [pathname, setInProgress]);\n\n  useEffect(() => {\n    const generateAccompanimentsList = async () => {\n      const listToReturn = [];\n      const NUMBER_OF_ITEMS = 6;\n      for (let index = 0; index < NUMBER_OF_ITEMS; index += 1) {\n        fetchDrinks().then(({ drinks }) => listToReturn.push(drinks[index]));\n      }\n      setToAccompany(listToReturn);\n    };\n    generateAccompanimentsList();\n  }, []);\n\n  useEffect(() => {\n    const currentRecipeId = pathname.split('/')[2];\n    const gettingRecipesDone = JSON.parse(localStorage\n      .getItem('doneRecipes'));\n    return localStorage.getItem('inProgressRecipes') !== null\n      && setIsRecipesDone(gettingRecipesDone\n        ? Array.from(gettingRecipesDone)\n          .some((recipeDoneIdStorage) => recipeDoneIdStorage.id === currentRecipeId)\n        : false);\n  }, [setIsRecipesDone, pathname, recipesDone]);\n\n  return (\n\n    <div\n      className=\"container-fluid\"\n      style={ { height: '100vh', width: '100vw' } }\n    >\n      <div className=\"row d-flex w-100\">\n\n        <div className=\"col-12 d-flex w-100\">\n          <img\n            data-testid=\"recipe-photo\"\n            className=\"img-fluid\"\n            src={ recipe.strMealThumb }\n            alt={ `Foto da receita\n            ${recipe.strMeal}, que contém ${recipe.strIngredient1} \n            e ${recipe.strIngredient2} entre outros ingredientes.` }\n          />\n        </div>\n\n        <div className=\"row d-flex justify-content-between\">\n          <div className=\"col-6\">\n            <h1 data-testid=\"recipe-title\">{ recipe.strMeal }</h1>\n          </div>\n          <div className=\"col-3\">\n            <ButtonShare props={ props } />\n          </div>\n          <div className=\"col-3\">\n            <ButtonFavorite props={ props } />\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h4 data-testid=\"recipe-category\">{ recipe.strCategory }</h4>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>Ingredients</h1>\n        </div>\n        {ingredients\n      && (\n        <div className=\"col-12\">\n          <ul>\n            {ingredients.map((ingredient, index) => (\n              <li\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ `${ingredient.ingredientName}${index}` }\n              >\n                {`${ingredient.ingredientName} - ${ingredient.ingredientMeasure}`}\n              </li>\n            ))}\n          </ul>\n        </div>)}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1>Instructions</h1>\n        </div>\n        <div>\n          <p data-testid=\"instructions\">{ recipe.strInstructions }</p>\n        </div>\n      </div>\n\n      <ReactPlayer\n        data-testid=\"video\"\n        width=\"95%\"\n        url={ recipe.strYoutube }\n      />\n\n      <div\n        className=\"row d-flex\"\n        style={ { width: '100vw' } }\n      >\n        <div\n          className=\"d-flex flex-wrap\"\n          style={ { width: '100vw' } }\n        >\n          <div className=\"row\">\n            <h1>Recommendeds</h1>\n          </div>\n          <Recommendeds items={ toAccompany } />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <ButtonProgress props={ props } />\n      </div>\n\n    </div>\n  );\n}\n\nMealDetails.propTypes = {\n  props: PropTypes.shape().isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape().isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MealDetails;\n","import React from 'react';\nimport DrinkDetails from './DrinkDetails';\nimport MealDetails from './MealDetails';\n\nfunction RecipeDetails(props) {\n  const { location: { pathname } } = props;\n  if (pathname.includes('comidas')) {\n    return (\n      <MealDetails props={ props } />\n    );\n  }\n\n  if (pathname.includes('bebidas')) {\n    return (\n      <DrinkDetails props={ props } />\n    );\n  }\n}\n\nexport default RecipeDetails;\n","function checkTarget(check) {\n  if (check) {\n    return 'listIngredients line-class';\n  }\n  return 'listIngredients ingredients-label';\n}\n\nexport default checkTarget;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport fetchDrinkRecipeDetailsById from '../services/fetchDrinkRecipeDetailsById';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport checkTarget from '../helpers/checkTarget';\nimport { Context } from '../context/Context';\n\nconst setStorage = (listIngredients, id) => {\n  const inProgressObj = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes')) : {};\n  const meals = Object.keys(inProgressObj).includes('meals')\n    ? inProgressObj.meals : {};\n  const inProgress = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes'))\n    : {\n      cocktails: {\n        [id]: [],\n      },\n      meals,\n    };\n  inProgress.cocktails[id] = listIngredients;\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n};\n\nconst setIngredientsInitial = (id) => {\n  if (localStorage.getItem('inProgressRecipes')) {\n    const inProgressObj = JSON.parse(localStorage.getItem('inProgressRecipes')).cocktails;\n    const listIngredients = Object.keys(inProgressObj).includes(id)\n      ? inProgressObj[id] : [];\n    return listIngredients;\n  }\n  return [];\n};\n\nexport default function DrinksRecipesInProgress({ match: { params } }) {\n  const recipeID = params.id;\n  const timeClipboard = 3000;\n  const [checkedList, setCheckedList] = useState([]);\n  const [isClipboard, setIsClipboard] = useState(false);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsList, setIngredientsList] = useState(setIngredientsInitial(recipeID));\n  const [favoriteStorage, setFavoriteStorage] = useState(localStorage\n    .getItem('favoriteRecipes')\n    ? JSON.parse(localStorage.getItem('favoriteRecipes')) : []);\n  const [isFavorite, setIsFavorite] = useState(favoriteStorage\n    .some((favorite) => favorite.id === recipeID));\n  const { recipesDone, setRecipesDone, setIsRecipesDone } = useContext(Context);\n\n  const fetchRecipe = async (ID) => {\n    const response = await fetchDrinkRecipeDetailsById(ID);\n    setRecipe(response[0]);\n    const ingredientMensure = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strMeasure') && value !== '');\n    const ingredientSetting = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strIngredient')\n      && value && value.lenght !== 0)\n      .reduce((prev, curr, index) => (\n        [...prev, `${curr[1]} - ${ingredientMensure[index][1]}`]\n      ), []);\n    setIngredients(ingredientSetting);\n    setCheckedList(ingredientSetting.map((ingredient) => (\n      ingredientsList.includes(ingredient)\n    )));\n  };\n\n  const toggleChecked = (index) => {\n    setCheckedList((prev) => {\n      const newList = [...prev];\n      newList[index] = !newList[index];\n      const IngredientsList = ingredients.filter((ingredient, innerIndex) => (\n        newList[innerIndex]\n      ));\n      setIngredientsList(IngredientsList);\n      setStorage(IngredientsList, recipeID);\n      return newList;\n    });\n  };\n\n  const handleFavoriteButton = () => {\n    if (isFavorite) {\n      setFavoriteStorage((prevState) => {\n        const newState = prevState.filter((favorite) => favorite.id !== recipeID);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n        setIsFavorite(false);\n        return newState;\n      });\n    } else {\n      const recipeObj = {\n        id: recipeID,\n        type: 'bebida',\n        area: recipe.strArea ? recipe.strArea : '',\n        category: recipe.strCategory ? recipe.strCategory : '',\n        alcoholicOrNot: recipe.strAlcoholic,\n        name: recipe.strDrink,\n        image: recipe.strDrinkThumb,\n      };\n\n      const newState = [...favoriteStorage, recipeObj];\n      setFavoriteStorage(newState);\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n    }\n  };\n\n  const handleClick = () => {\n    setRecipesDone([...recipesDone, recipe]);\n    setIsRecipesDone(true);\n  };\n\n  useEffect(() => {\n    fetchRecipe(recipeID);\n  }, [recipeID]);\n\n  return (\n    <div className=\"drinks-in-progress\">\n      <img\n        className=\"drink-photo\"\n        src={ recipe.strDrinkThumb }\n        alt=\"Foto do drink\"\n        data-testid=\"recipe-photo\"\n      />\n      <h4\n        data-testid=\"recipe-title\"\n      >\n        { recipe.strDrink }\n      </h4>\n      <h5\n        data-testid=\"recipe-category\"\n      >\n        { recipe.strCategory }\n      </h5>\n      <nav className=\"in-progress-butons mb-36\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={ () => {\n            navigator.clipboard.writeText(window.location\n              .href.replace('/in-progress', '')).then(() => {\n              setIsClipboard(true);\n              setTimeout(() => { setIsClipboard(false); }, timeClipboard);\n            });\n          } }\n        >\n          {isClipboard ? 'Link copiado!' : (<img\n            src={ shareIcon }\n            alt=\"Botão de compartilhamento\"\n            data-testid=\"share-btn\"\n          />)}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={ handleFavoriteButton }\n        >\n          <img\n            src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"Botão de compartilhamento\"\n            data-testid=\"favorite-btn\"\n          />\n        </button>\n      </nav>\n      <div>\n        <ul>\n          {\n            ingredients.map((ingredient, index) => (\n              <li\n                key={ ingredient }\n                className={ checkTarget(checkedList[index]) }\n                data-testid={ `${index}-ingredient-step` }\n              >\n                <label htmlFor={ ingredient } className=\"form-check-label\">\n                  <input\n                    name=\"check\"\n                    className=\"form-check-input\"\n                    id={ ingredient }\n                    checked={ checkedList[index] }\n                    onClick={ () => toggleChecked(index) }\n                    type=\"checkbox\"\n                  />\n                  <p\n                    className=\"ingredients-label\"\n                  >\n                    { ingredient }\n                  </p>\n                </label>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"row col-md-4 card-box text-center\">\n        <section>\n          <p\n            data-testid=\"instructions\"\n            className=\"paragraph-recipe-instructions\"\n          >\n            { recipe.strInstructions }\n          </p>\n        </section>\n      </div>\n      <Link to=\"/receitas-feitas\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-lg\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ !checkedList.every((item) => item) }\n          onClick={ handleClick }\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nDrinksRecipesInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape().isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport fetchMealRecipeDetailsById from '../services/fetchMealRecipeDetailsById';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport checkTarget from '../helpers/checkTarget';\nimport { Context } from '../context/Context';\n\nconst setStorage = (listIngredients, id) => {\n  const inProgressObj = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes')) : {};\n  const cocktails = Object.keys(inProgressObj).includes('cocktails')\n    ? inProgressObj.cocktails : {};\n  const inProgress = localStorage.getItem('inProgressRecipes')\n    ? JSON.parse(localStorage.getItem('inProgressRecipes'))\n    : {\n      meals: {\n        [id]: [],\n      },\n      cocktails,\n    };\n  inProgress.meals[id] = listIngredients;\n  localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n};\n\nconst setIngredientsInitial = (id) => {\n  if (localStorage.getItem('inProgressRecipes')) {\n    const inProgressObj = JSON.parse(localStorage.getItem('inProgressRecipes')).meals;\n    const listIngredients = Object.keys(inProgressObj).includes(id)\n      ? inProgressObj[id] : [];\n    return listIngredients;\n  }\n  return [];\n};\n\nexport default function MealsRecipesInProgress({ match: { params } }) {\n  const recipeID = params.id;\n  const timeClipboard = 3000;\n  const [checkedList, setCheckedList] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsList, setIngredientsList] = useState(setIngredientsInitial(recipeID));\n  const [isClipboard, setIsClipboard] = useState(false);\n  const [favoriteStorage, setFavoriteStorage] = useState(localStorage\n    .getItem('favoriteRecipes')\n    ? JSON.parse(localStorage.getItem('favoriteRecipes')) : []);\n  const [isFavorite, setIsFavorite] = useState(favoriteStorage\n    .some((favorite) => favorite.id === recipeID));\n  const { recipesDone, setRecipesDone, setIsRecipesDone } = useContext(Context);\n\n  const fetchRecipe = async (ID) => {\n    const response = await fetchMealRecipeDetailsById(ID);\n    setRecipe(response[0]);\n    const ingredientMensure = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strMeasure') && value !== '');\n    const ingredientSetting = Object.entries(response[0])\n      .filter(([key, value]) => key.includes('strIngredient')\n      && value && value.lenght !== 0)\n      .reduce((prev, curr, index) => (\n        [...prev, `${curr[1]} - ${ingredientMensure[index][1]}`]\n      ), []);\n    setIngredients(ingredientSetting);\n    setCheckedList(ingredientSetting.map((ingredient) => (\n      ingredientsList.includes(ingredient)\n    )));\n  };\n\n  const toggleChecked = (index) => {\n    setCheckedList((prev) => {\n      const newList = [...prev];\n      newList[index] = !newList[index];\n      const IngredientsList = ingredients.filter((ingredient, innerIndex) => (\n        newList[innerIndex]\n      ));\n      setIngredientsList(IngredientsList);\n      setStorage(IngredientsList, recipeID);\n      return newList;\n    });\n  };\n\n  const handleFavoriteButton = () => {\n    if (isFavorite) {\n      setFavoriteStorage((prevState) => {\n        const newState = prevState.filter((favorite) => favorite.id !== recipeID);\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n        setIsFavorite(false);\n        return newState;\n      });\n    } else {\n      console.log(recipe);\n      const recipeObj = {\n        id: recipeID,\n        type: 'comida',\n        area: recipe.strArea ? recipe.strArea : '',\n        category: recipe.strCategory ? recipe.strCategory : '',\n        alcoholicOrNot: '',\n        name: recipe.strMeal,\n        image: recipe.strMealThumb,\n      };\n\n      const newState = [...favoriteStorage, recipeObj];\n      setFavoriteStorage(newState);\n      setIsFavorite(true);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newState));\n    }\n  };\n\n  const handleClick = () => {\n    setRecipesDone([...recipesDone, recipe]);\n    setIsRecipesDone(true);\n  };\n\n  useEffect(() => {\n    fetchRecipe(recipeID);\n  }, [recipeID]);\n  return (\n    <div className=\"meal-in-progress\">\n      <img\n        className=\"meal-photo\"\n        src={ recipe.strMealThumb }\n        alt=\"Foto do prato\"\n        data-testid=\"recipe-photo\"\n      />\n      <h4\n        data-testid=\"recipe-title\"\n      >\n        { recipe.strMeal }\n      </h4>\n      <h5\n        data-testid=\"recipe-category\"\n      >\n        { recipe.strCategory }\n      </h5>\n      <nav className=\"in-progress-butons mb-36\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={ () => {\n            navigator.clipboard.writeText(window.location\n              .href.replace('/in-progress', '')).then(() => {\n              setIsClipboard(true);\n              setTimeout(() => { setIsClipboard(false); }, timeClipboard);\n            });\n          } }\n        >\n          {isClipboard ? 'Link copiado!' : (<img\n            src={ shareIcon }\n            alt=\"Botão de compartilhamento\"\n            data-testid=\"share-btn\"\n          />)}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={ handleFavoriteButton }\n        >\n          <img\n            data-testid=\"favorite-btn\"\n            src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"Botão de compartilhamento\"\n          />\n        </button>\n      </nav>\n      <div>\n        <ul>\n          {\n            ingredients.map((ingredient, index) => (\n              <li\n                key={ ingredient }\n                className={ checkTarget(checkedList[index]) }\n                data-testid={ `${index}-ingredient-step` }\n              >\n                <label htmlFor={ ingredient } className=\"form-check-label\">\n                  <input\n                    name=\"check\"\n                    className=\"form-check-input\"\n                    id={ ingredients }\n                    checked={ checkedList[index] }\n                    onClick={ () => toggleChecked(index) }\n                    type=\"checkbox\"\n                  />\n                  <p\n                    className=\"ingredients-label\"\n                  >\n                    { ingredient }\n                  </p>\n                </label>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"row col-md-4 card-box text-center\">\n        <section>\n          <p\n            data-testid=\"instructions\"\n            className=\"paragraph-recipe-instructions\"\n          >\n            { recipe.strInstructions }\n          </p>\n        </section>\n      </div>\n      <Link to=\"/receitas-feitas\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-lg\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ !checkedList.every((item) => item) }\n          onClick={ handleClick }\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nMealsRecipesInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape().isRequired,\n  }).isRequired,\n};\n","const fetchDrinksIngredients = async () => {\n  const API_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse.drinks;\n};\n\nexport default fetchDrinksIngredients;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport { Context } from '../context/Context';\nimport fetchDrinksIngredients from '../services/fetchDrinksIngredients';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreDrinksIngredients() {\n  const [ingredients, setIngredients] = useState({});\n  const maxCards = 12;\n  const { setSearchTerm, setIsSearchByIngredient } = useContext(Context);\n\n  const fetchByIngredients = async () => {\n    const ingredientsObj = await fetchDrinksIngredients();\n    setIngredients(ingredientsObj.filter(\n      (__ingredient, index) => index < maxCards,\n    ));\n  };\n  useEffect(() => {\n    fetchByIngredients();\n  }, []);\n\n  const handleClick = (ingredientName) => {\n    setSearchTerm(ingredientName);\n    setIsSearchByIngredient(true);\n  };\n\n  return (\n    <div className=\"exp-ingred-meals-container\">\n      <div>\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <h3 className=\"text-center\" data-testid=\"page-title\">Explorar Ingredientes</h3>\n      {\n        ingredients.length > 0\n          && ingredients.map((ingredient, index) => (\n            <Link\n              to=\"/bebidas\"\n              key={ ingredient.strIngredient1 }\n              onClick={ () => handleClick(ingredient.strIngredient1) }\n            >\n              <div\n                data-testid={ `${index}-ingredient-card` }\n                className=\"exp-ingredient-card\"\n              >\n                <img\n                  src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient\n                    .strIngredient1}-Small.png` }\n                  className=\"card-explore-ingredient\"\n                  alt=\"Imagem do Ingrediente\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <p\n                  data-testid={ `${index}-card-name` }\n                >\n                  { ingredient.strIngredient1 }\n                </p>\n              </div>\n            </Link>\n          ))\n      }\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinksIngredients;\n","const fetchIngredients = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchIngredients;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../context/Context';\nimport Footer from '../components/Footer';\nimport fetchIngredients from '../services/fetchIngredients';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction ExploreFoodsIngredients() {\n  const [ingredients, setIngredients] = useState({});\n  const maxCards = 12;\n  const { setSearchTerm, setIsSearchByIngredient } = useContext(Context);\n\n  const fetchByIngredients = async () => {\n    const ingredientsObj = await fetchIngredients();\n    setIngredients(ingredientsObj.meals.filter(\n      (__ingredient, index) => index < maxCards,\n    ));\n  };\n\n  useEffect(() => {\n    fetchByIngredients();\n  }, []);\n\n  const handleClick = (ingredientName) => {\n    setSearchTerm(ingredientName);\n    setIsSearchByIngredient(true);\n  };\n\n  return (\n    <div className=\"exp-ingred-meals-container\">\n      <div>\n        <Link to=\"/perfil\">\n          <button type=\"button\">\n            <img\n              src={ profileIcon }\n              alt=\"profile-icon\"\n              className=\"header-profile-icon\"\n              data-testid=\"profile-top-btn\"\n            />\n          </button>\n        </Link>\n      </div>\n      <h3 className=\"text-center\" data-testid=\"page-title\">Explorar Ingredientes</h3>\n      {\n        ingredients.length > 0\n          && ingredients.map((ingredient, index) => (\n            <Link\n              to=\"/comidas\"\n              key={ ingredient.idIngredient }\n              onClick={ () => handleClick(ingredient.strIngredient) }\n            >\n              <div\n                data-testid={ `${index}-ingredient-card` }\n                className=\"exp-ingredient-card\"\n              >\n                <img\n                  src={ `https://www.themealdb.com/images/ingredients/${ingredient\n                    .strIngredient}-Small.png` }\n                  className=\"card-explore-ingredient\"\n                  alt=\"Imagem do Ingrediente\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <p\n                  data-testid={ `${index}-card-name` }\n                >\n                  { ingredient.strIngredient }\n                </p>\n              </div>\n            </Link>\n          ))\n      }\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsIngredients;\n","const fetchAreas = async () => {\n  const API_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  const response = await fetch(API_URL);\n  const jsonResponse = await response.json();\n  return jsonResponse;\n};\n\nexport default fetchAreas;\n","import { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport fetchAreas from '../services/fetchAreas';\nimport fetchMeals from '../services/fetchMeals';\nimport Header from '../components/Header';\n\nfunction ExploreFoodsAreas() {\n  const [areas, setAreas] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [filterArea, setFilterArea] = useState('all');\n  const maxCards = 12;\n\n  const fetchAreasToState = async () => {\n    const fetchResponse = await fetchAreas();\n    setAreas(fetchResponse.meals);\n  };\n\n  const fetchMealsToContext = async () => {\n    const fetchResponse = await fetchMeals();\n    const arrObj = fetchResponse.meals;\n    setMeals(arrObj);\n  };\n\n  useEffect(() => {\n    fetchAreasToState();\n  }, []);\n\n  useEffect(() => {\n    fetchMealsToContext();\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <h3 className=\"text-center\" data-testid=\"page-title\">Explorar Origem</h3>\n      <label htmlFor=\"select-area\">\n        <select\n          className=\"form-select form-select-lg\"\n          name=\"area\"\n          id=\"select-area\"\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ ({ target }) => setFilterArea(target.value) }\n        >\n          {\n            areas.length > 0\n          && areas\n            .map((area, index) => (\n              <option\n                value={ area.strArea }\n                key={ `${index} - ${area.strArea}` }\n                data-testid={ `${area.strArea}-option` }\n              >\n                { area.strArea }\n              </option>\n            ))\n          }\n          <option\n            value=\"all\"\n            data-testid=\"All-option\"\n          >\n            All\n          </option>\n        </select>\n      </label>\n      {\n        meals\n          .filter((item) => (filterArea === 'all'\n            ? true : item.strArea === filterArea))\n          .filter((item, index) => index < maxCards)\n          .map((meal, index) => (\n            <Link\n              className=\"custom-card col-sm-6 col-md-3\"\n              style={ { width: '40vw' } }\n              data-testid={ `${index}-recipe-card` }\n              key={ meal.idMeal }\n              to={ `/comidas/${meal.idMeal}` }\n            >\n              <img\n                className=\"img-thumbnail\"\n                src={ meal.strMealThumb }\n                alt={ meal.strMeal }\n                data-testid={ `${index}-card-img` }\n                width=\"100px\"\n              />\n              <h4 className=\"card-title\" data-testid={ `${index}-card-name` }>\n                {meal.strMeal}\n              </h4>\n            </Link>\n          ))\n      }\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsAreas;\n","import React from 'react';\n\nexport default function ErrorPage() {\n  return (\n    <h1>Not Found</h1>\n  );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport FoodsRecipes from './pages/FoodsRecipes';\nimport { Provider } from './context/Context';\nimport Profile from './pages/Profile';\nimport RecipesMade from './pages/RecipesMade';\nimport FavoritesRecipes from './pages/FavoritesRecipes';\nimport ExploreScreen from './pages/ExploreScreen';\nimport ExploreFoods from './pages/ExploreFoods';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport DrinksRecipes from './pages/DrinksRecipes';\nimport RecipeDetails from './components/RecipeDetails';\nimport DrinksRecipesInProgress from './pages/DrinksRecipesInProgress';\nimport MealsRecipsInProgress from './pages/MealsRecipesInProgress';\nimport ExploreDrinksIngredients from './pages/ExploreDrinksIngredients';\nimport ExploreFoodsIngredients from './pages/ExploreFoodsIngredients';\nimport ExploreFoodsAreas from './pages/ExploreFoodsAreas';\nimport ErrorPage from './pages/ErrorPage';\n\nfunction App() {\n  return (\n    <div\n      className=\"container-fluid align-items-center d-flex flex-wrap\"\n      style={ { height: '100vh', width: '100vw' } }\n    >\n      <Provider>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route path=\"/comidas/:id/in-progress\" component={ MealsRecipsInProgress } />\n          <Route path=\"/comidas/:id\" component={ RecipeDetails } />\n          <Route path=\"/comidas\" component={ FoodsRecipes } />\n          <Route path=\"/bebidas/:id/in-progress\" component={ DrinksRecipesInProgress } />\n          <Route path=\"/bebidas/:id\" component={ RecipeDetails } />\n          <Route path=\"/bebidas\" component={ DrinksRecipes } />\n          <Route path=\"/perfil\" component={ Profile } />\n          <Route path=\"/receitas-feitas\" component={ RecipesMade } />\n          <Route path=\"/receitas-favoritas\" component={ FavoritesRecipes } />\n          <Route exact path=\"/explorar\" component={ ExploreScreen } />\n          <Route\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExploreFoodsIngredients }\n          />\n          <Route path=\"/explorar/comidas/area\" component={ ExploreFoodsAreas } />\n          <Route\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExploreDrinksIngredients }\n          />\n          <Route path=\"/explorar/bebidas/area\" component={ ErrorPage } />\n          <Route path=\"/explorar/comidas\" component={ ExploreFoods } />\n          <Route path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n        </Switch>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}